// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.JSInvocationMirror = {"":"Object;memberName?,_internalName,_kind,_lib0_arguments,_namedArgumentNames,_namedIndices",
 get$isGetter: function() {
  return $.eq(this._kind, 1);
},
 get$isAccessor: function() {
  return !$.eqB(this._kind, 0);
},
 get$positionalArguments: function() {
  var list, t1, t3, t4, argumentCount, index;
  if (this.get$isGetter() === true)
    return;
  list = [];
  t1 = this._lib0_arguments;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$positionalArguments$bailout(1, t1, list);
  t3 = t1.length;
  t4 = this._namedArgumentNames;
  t4 = $.getInterceptor$JSStringJSArray(t4).get$length(t4);
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  argumentCount = t3 - t4;
  for (index = 0; index < argumentCount; ++index) {
    if (index >= t1.length)
      throw $.ioore(index);
    list.push(t1[index]);
  }
  return list;
},
 get$positionalArguments$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      list = env1;
      t1 = env0;
      break;
    case 2:
      argumentCount = env2;
      list = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isGetter() === true)
        return;
      list = [];
      t1 = this._lib0_arguments;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      t4 = this._namedArgumentNames;
      argumentCount = $.sub(t3, $.getInterceptor$JSStringJSArray(t4).get$length(t4));
    case 2:
      var list, t1, t3, t4, argumentCount, index;
      state0 = 0;
      for (index = 0; $.ltB(index, argumentCount); ++index)
        list.push($.index(t1, index));
      return list;
  }
},
 get$namedArguments: function() {
  var map, t2, namedArgumentCount, t4, t6, namedArgumentsStartIndex, t1, i, t3, t5;
  if (this.get$isAccessor() === true)
    return;
  map = $.makeLiteralMap([]);
  if (typeof map !== 'object' || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.is$JavaScriptIndexingBehavior())
    return this.get$namedArguments$bailout(1, map);
  t2 = this._namedArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(2, t2, map);
  namedArgumentCount = t2.length;
  t4 = this._lib0_arguments;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(4, t2, t4, map, namedArgumentCount);
  t6 = t4.length;
  namedArgumentsStartIndex = t6 - namedArgumentCount;
  for (t1 = map.length, i = 0; i < namedArgumentCount; ++i) {
    t3 = t2[i];
    t5 = namedArgumentsStartIndex + i;
    if (t5 < 0 || t5 >= t6)
      throw $.ioore(t5);
    t5 = t4[t5];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1)
      throw $.ioore(t3);
    map[t3] = t5;
  }
  return map;
},
 get$namedArguments$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      map = env0;
      break;
    case 2:
      map = env1;
      t2 = env0;
      break;
    case 3:
      namedArgumentCount = env2;
      map = env1;
      t2 = env0;
      break;
    case 4:
      namedArgumentCount = env3;
      map = env2;
      t5 = env1;
      t2 = env0;
      break;
    case 5:
      namedArgumentCount = env4;
      map = env3;
      namedArgumentsStartIndex = env2;
      t5 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isAccessor() === true)
        return;
      map = $.makeLiteralMap([]);
    case 1:
      state0 = 0;
      t2 = this._namedArgumentNames;
    case 2:
      state0 = 0;
      namedArgumentCount = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
    case 3:
      state0 = 0;
      t5 = this._lib0_arguments;
    case 4:
      state0 = 0;
      namedArgumentsStartIndex = $.sub($.getInterceptor$JSStringJSArray(t5).get$length(t5), namedArgumentCount);
    case 5:
      var map, t2, namedArgumentCount, t5, namedArgumentsStartIndex, i;
      state0 = 0;
      for (i = 0; $.ltB(i, namedArgumentCount); ++i)
        $.indexSet(map, $.index(t2, i), $.index(t5, $.add(namedArgumentsStartIndex, i)));
      return map;
  }
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.TypeImpl = {"":"Object;typeName",
 toString$0: function() {
  return this.typeName;
},
 get$hashCode: function() {
  var t1 = this.typeName;
  return $.getInterceptor(t1).get$hashCode(t1);
},
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$TypeImpl))
    return false;
  return $.eq(this.typeName, other.typeName);
},
 is$TypeImpl: true
};

$$.ConstantMap = {"":"Object;length?,_jsObject,_lib0_keys?",
 containsKey$1: function(key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._lib0_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(f, this));
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":"Object;_tag?,_tags,_set?"
};

$$.JSSyntaxRegExp = {"":"Object;_lib0_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"":"Object;pattern?,str,start,end,_groups",
 start$1: function(arg0) {
  return this.start.call$1(arg0);
},
 start$3: function(arg0, arg1, arg2) {
  return this.start.call$3(arg0, arg1, arg2);
},
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_lib0_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._lib0_next;
  this._lib0_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib0_next == null))
    return true;
  this._lib0_next = this._re.firstMatch$1(this._str);
  if (this._lib0_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern?",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 start$1: function(arg0) {
  return this.start.call$1(arg0);
},
 start$3: function(arg0, arg1, arg2) {
  return this.start.call$3(arg0, arg1, arg2);
}
};

$$.bool = {"":"Object;",
 is$bool: true
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message?",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_1;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_1;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer("");
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_1) + "]";
      else {
        t3 = t1.sb_1;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_1 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_1;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message?",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message?",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message?",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$._ExceptionImplementation = {"":"Object;message?",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {"":"Object;message?",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$.RuntimeError = {"":"Object;message?",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$.FutureNotCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future has not been completed";
}
};

$$.FutureAlreadyCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future already completed";
}
};

$$.FutureUnhandledException = {"":"Object;source?,stackTrace",
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.source;
  t1 = $.getInterceptor(t1).toString$0(t1);
  t2 = "FutureUnhandledException: exception while executing Future\n  " + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\n  ")) + "\n" + "original stack trace:\n  ";
  t3 = this.stackTrace;
  t3 = $.getInterceptor(t3).toString$0(t3);
  return t2 + $.S($.getInterceptor$JSString(t3).replaceAll$2(t3, "\n", "\n  "));
}
};

$$._FutureImpl = {"":"Object;_isComplete,_value,_exception,_stackTrace,_exceptionHandled,_throwOnException,_successListeners,_exceptionHandlers,_completionListeners",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.CTC0.iterator$0(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.CTC0.iterator$0(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (!this._exceptionHandled && this._throwOnException)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.CTC0.iterator$0(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"":"Object;_futureImpl",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception, null);
}
};

$$._HashMapImpl = {"":"Object;_keys?,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  t3 = this._keys;
  t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t3, t1);
  hash = (t1 & t3 - 1) >>> 0;
  for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, key, hash, numberOfProbes, t1, insertionIndex);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      key = env0;
      break;
    case 3:
      insertionIndex = env4;
      t1 = env3;
      numberOfProbes = env2;
      hash = env1;
      key = env0;
      break;
    case 4:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      t3 = this._keys;
      t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
    case 2:
      state0 = 0;
      hash = $.and(t1, $.sub(t3, 1));
      insertionIndex = -1;
      numberOfProbes = 1;
    default:
      var t1, key, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state0 = 0;
              existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && existingKey === $.CTC4)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              t1 = this._keys;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
            case 4:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var t1, t2, hash, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  t2 = this._keys;
  hash = $.and(t1, $.sub($.getInterceptor$JSStringJSArray(t2).get$length(t2), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, existingKey, numberOfProbes0, t1;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, t1, numberOfFree;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    t1 = this._keys;
    this._grow$1($.mul($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2));
    return;
  }
  t1 = this._keys;
  numberOfFree = $.sub($.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree)) {
    t1 = this._keys;
    this._grow$1($.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _grow$1: function(newCapacity) {
  var t1, capacity, oldKeys, oldValues, t4, i, key, value, newIndex;
  t1 = this._keys;
  capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, oldKeys, capacity);
  oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
  t4 = $.List_List(newCapacity);
  $.setRuntimeTypeInfo(t4, []);
  this._keys = t4;
  t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t4;
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC4)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      capacity = env1;
      newCapacity = env0;
      break;
    case 2:
      capacity = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
    case 3:
      capacity = env3;
      oldValues = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._keys;
      capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 1:
      state0 = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      oldKeys = this._keys;
    case 2:
      state0 = 0;
      oldValues = this._values;
    case 3:
      var t1, capacity, newCapacity, oldKeys, oldValues, t4, i, key, value, newIndex;
      state0 = 0;
      t4 = $.List_List(newCapacity);
      $.setRuntimeTypeInfo(t4, []);
      this._keys = t4;
      t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
      $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
      this._values = t4;
      for (i = 0; $.ltB(i, capacity); ++i) {
        key = $.index(oldKeys, i);
        if (key == null || key === $.CTC4)
          continue;
        value = $.index(oldValues, i);
        newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  var t1, length$, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state0, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 operator$indexSet$2: function(key, value) {
  var index;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  if ($.index(this._keys, index) == null || $.index(this._keys, index) === $.CTC4)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  $.indexSet(this._keys, index, key);
  $.indexSet(this._values, index, value);
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 remove$1: function(key) {
  var index, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    value = $.index(this._values, index);
    $.indexSet(this._values, index, null);
    $.indexSet(this._keys, index, $.CTC4);
    this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var t1, length$, i, key;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC4))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state0, f, length$) {
  var i, key;
  for (i = 0; $.ltB(i, length$); ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC4))
      f.call$2(key, $.index(this._values, i));
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  var t1 = $.List_List(8);
  $.setRuntimeTypeInfo(t1, []);
  this._keys = t1;
  t1 = $.List_List(8, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t1;
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key?,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor$JSArray(t1).addLast$1(t1, $._KeyValuePair$(key, value, $.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[1]));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  var t1, t2, t3;
  t1 = $.getRuntimeTypeInfo(this)[0];
  t2 = $.getRuntimeTypeInfo(this);
  this._map = $.HashMap_HashMap(t1, [$.DoubleLinkedQueueEntry, [$._KeyValuePair, t2[0], t2[1]]]);
  t3 = $.getRuntimeTypeInfo(this);
  this._list = $.DoubleLinkedQueue$([$._KeyValuePair, t3[0], t3[1]]);
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
},
 noSuchMethod$1: function(invocation) {
  throw $.$$throw($.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
},
 get$runtimeType: function() {
  return $.TypeImpl$($.getRuntimeTypeString(this));
},
 removeLast$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("removeLast", "removeLast$0", 0, [], []));
 },
 floor$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("floor", "floor$0", 0, [], []));
 },
 _postMessage_2$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_2", "_postMessage_2$3", 0, [$0, $1, $2], []));
 },
 load$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("load", "load$0", 0, [], []));
 },
 allMatches$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("allMatches", "allMatches$1", 0, [$0], []));
 },
 $dom_addEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_addEventListener", "$dom_addEventListener$3", 0, [$0, $1, $2], []));
 },
 _pause$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_pause", "_pause$0", 0, [], []));
 },
 rotate$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("rotate", "rotate$1", 0, [$0], []));
 },
 _probeForAdding$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForAdding", "_probeForAdding$1", 0, [$0], []));
 },
 round$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("round", "round$0", 0, [], []));
 },
 _computePausedTime$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_computePausedTime", "_computePausedTime$0", 0, [], []));
 },
 addToWorld$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("addToWorld", "addToWorld$0", 0, [], []));
 },
 nextBool$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nextBool", "nextBool$0", 0, [], []));
 },
 _modify$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_modify", "_modify$1", 0, [$0], []));
 },
 beginPath$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("beginPath", "beginPath$0", 0, [], []));
 },
 resetCooldown$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("resetCooldown", "resetCooldown$0", 0, [], []));
 },
 remove$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$0", 0, [], []));
 },
 remove$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$1", 0, [$0], []));
 },
 _schedule$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_schedule", "_schedule$0", 0, [], []));
 },
 changedEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("changedEntity", "changedEntity$1", 0, [$0], []));
 },
 restore$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("restore", "restore$0", 0, [], []));
 },
 setTransform$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("setTransform", "setTransform$6", 0, [$0, $1, $2, $3, $4, $5], []));
 },
 _addSystemBit$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_addSystemBit", "_addSystemBit$1", 0, [$0], []));
 },
 _requestAnimationFrame$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_requestAnimationFrame", "_requestAnimationFrame$1", 0, [$0], []));
 },
 contains$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$2", 0, [$0, $1], []));
 },
 createBufferSource$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createBufferSource", "createBufferSource$0", 0, [], []));
 },
 _check$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_check", "_check$1", 0, [$0], []));
 },
 _check$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_check", "_check$2", 0, [$0, $1], []));
 },
 getSafe$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getSafe", "getSafe$1", 0, [$0], []));
 },
 add$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("add", "add$1", 0, [$0], []));
 },
 createEntity$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createEntity", "createEntity$0", 0, [], []));
 },
 initialize$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("initialize", "initialize$0", 0, [], []));
 },
 _complete$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_complete", "_complete$0", 0, [], []));
 },
 get$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("get", "get$1", 0, [$0], []));
 },
 applyToStatus$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("applyToStatus", "applyToStatus$1", 0, [$0], []));
 },
 _onRequestSuccess$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onRequestSuccess", "_onRequestSuccess$2", 0, [$0, $1], []));
 },
 complete$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("complete", "complete$1", 0, [$0], []));
 },
 getEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getEntity", "getEntity$1", 0, [$0], []));
 },
 _throwUnmodifiable$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_throwUnmodifiable", "_throwUnmodifiable$0", 0, [], []));
 },
 computeValue$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("computeValue", "computeValue$0", 0, [], []));
 },
 addSystem$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addSystem", "addSystem$1", 0, [$0], []));
 },
 allOf$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("allOf", "allOf$1", 0, [$0], []));
 },
 _setupNodes$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setupNodes", "_setupNodes$0", 0, [], []));
 },
 deleteFromWorld$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("deleteFromWorld", "deleteFromWorld$0", 0, [], []));
 },
 abs$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("abs", "abs$0", 0, [], []));
 },
 _removeSystemBit$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_removeSystemBit", "_removeSystemBit$1", 0, [$0], []));
 },
 $dom_setAttribute$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_setAttribute", "$dom_setAttribute$2", 0, [$0, $1], []));
 },
 _removeFromSystem$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_removeFromSystem", "_removeFromSystem$1", 0, [$0], []));
 },
 _setupSourceNodeForPlayback$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setupSourceNodeForPlayback", "_setupSourceNodeForPlayback$0", 0, [], []));
 },
 closePath$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("closePath", "closePath$0", 0, [], []));
 },
 _getPropertyValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getPropertyValue", "_getPropertyValue$1", 0, [$0], []));
 },
 playOnceIn$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("playOnceIn", "playOnceIn$2", 0, [$0, $1], []));
 },
 requestAnimationFrame$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("requestAnimationFrame", "requestAnimationFrame$1", 0, [$0], []));
 },
 deleted$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("deleted", "deleted$1", 0, [$0], []));
 },
 observe$2$attributes: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("observe", "observe$2$attributes", 0, [$0, $1], ["attributes"]));
 },
 postMessage$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("postMessage", "postMessage$2", 0, [$0, $1], []));
 },
 indexOf$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$2", 0, [$0, $1], []));
 },
 processEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("processEntity", "processEntity$1", 0, [$0], []));
 },
 disconnect$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("disconnect", "disconnect$1", 0, [$0], []));
 },
 _link$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_link", "_link$2", 0, [$0, $1], []));
 },
 maybeSchedule$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("maybeSchedule", "maybeSchedule$0", 0, [], []));
 },
 nextInt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("nextInt", "nextInt$1", 0, [$0], []));
 },
 _contains$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_contains", "_contains$1", 0, [$0], []));
 },
 _removeTypeBit$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_removeTypeBit", "_removeTypeBit$1", 0, [$0], []));
 },
 send$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("send", "send$0", 0, [], []));
 },
 _setException$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_setException", "_setException$2", 0, [$0, $1], []));
 },
 _scanSounds$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_scanSounds", "_scanSounds$0", 0, [], []));
 },
 _resume$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_resume", "_resume$0", 0, [], []));
 },
 expireBy$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("expireBy", "expireBy$1", 0, [$0], []));
 },
 call$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$0", 0, [], []));
 },
 call$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$1", 0, [$0], []));
 },
 call$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$2", 0, [$0, $1], []));
 },
 call$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$3", 0, [$0, $1, $2], []));
 },
 call$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$4", 0, [$0, $1, $2, $3], []));
 },
 call$5: function($0, $1, $2, $3, $4) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$5", 0, [$0, $1, $2, $3, $4], []));
 },
 call$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$6", 0, [$0, $1, $2, $3, $4, $5], []));
 },
 call$9: function($0, $1, $2, $3, $4, $5, $6, $7, $8) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$9", 0, [$0, $1, $2, $3, $4, $5, $6, $7, $8], []));
 },
 call$2$attributes: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$attributes", 0, [$0, $1], ["attributes"]));
 },
 $dom_removeChild$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeChild", "$dom_removeChild$1", 0, [$0], []));
 },
 getManager$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getManager", "getManager$1", 0, [$0], []));
 },
 toInt$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toInt", "toInt$0", 0, [], []));
 },
 createPanner$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createPanner", "createPanner$0", 0, [], []));
 },
 save$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("save", "save$0", 0, [], []));
 },
 enabled$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("enabled", "enabled$1", 0, [$0], []));
 },
 _probeForLookup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForLookup", "_probeForLookup$1", 0, [$0], []));
 },
 trim$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("trim", "trim$0", 0, [], []));
 },
 replaceAll$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("replaceAll", "replaceAll$2", 0, [$0, $1], []));
 },
 open$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("open", "open$2", 0, [$0, $1], []));
 },
 translate$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("translate", "translate$2", 0, [$0, $1], []));
 },
 makeClip$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("makeClip", "makeClip$2", 0, [$0, $1], []));
 },
 firstMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("firstMatch", "firstMatch$1", 0, [$0], []));
 },
 start$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("start", "start$1", 0, [$0], []));
 },
 start$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("start", "start$3", 0, [$0, $1, $2], []));
 },
 isWithtinXRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("isWithtinXRange", "isWithtinXRange$2", 0, [$0, $1], []));
 },
 fillRect$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("fillRect", "fillRect$4", 0, [$0, $1, $2, $3], []));
 },
 isIndexWithinBounds$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("isIndexWithinBounds", "isIndexWithinBounds$1", 0, [$0], []));
 },
 transform$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("transform", "transform$6", 0, [$0, $1, $2, $3, $4, $5], []));
 },
 truncate$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("truncate", "truncate$0", 0, [], []));
 },
 completeException$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("completeException", "completeException$1", 0, [$0], []));
 },
 next$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("next", "next$0", 0, [], []));
 },
 _onDecode$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onDecode", "_onDecode$2", 0, [$0, $1], []));
 },
 $dom_removeEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeEventListener", "$dom_removeEventListener$3", 0, [$0, $1, $2], []));
 },
 iterator$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("iterator", "iterator$0", 0, [], []));
 },
 changedInWorld$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("changedInWorld", "changedInWorld$0", 0, [], []));
 },
 _onCallback$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_onCallback", "_onCallback$0", 0, [], []));
 },
 split$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("split", "split$1", 0, [$0], []));
 },
 playLoopedIn$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("playLoopedIn", "playLoopedIn$2", 0, [$0, $1], []));
 },
 _call$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_call", "_call$2", 0, [$0, $1], []));
 },
 changed$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("changed", "changed$1", 0, [$0], []));
 },
 $dom_removeAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeAttribute", "$dom_removeAttribute$1", 0, [$0], []));
 },
 hasMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("hasMatch", "hasMatch$1", 0, [$0], []));
 },
 previousEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("previousEntry", "previousEntry$0", 0, [], []));
 },
 $dom_getAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_getAttribute", "$dom_getAttribute$1", 0, [$0], []));
 },
 fill$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("fill", "fill$0", 0, [], []));
 },
 lastIndexOf$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lastIndexOf", "lastIndexOf$1", 0, [$0], []));
 },
 nextDouble$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nextDouble", "nextDouble$0", 0, [], []));
 },
 substring$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$1", 0, [$0], []));
 },
 substring$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$2", 0, [$0, $1], []));
 },
 processEntityChanges$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("processEntityChanges", "processEntityChanges$0", 0, [], []));
 },
 query$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("query", "query$1", 0, [$0], []));
 },
 playClipFromSource$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("playClipFromSource", "playClipFromSource$2", 0, [$0, $1], []));
 },
 createGain$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createGain", "createGain$0", 0, [], []));
 },
 charCodeAt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("charCodeAt", "charCodeAt$1", 0, [$0], []));
 },
 addManager$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addManager", "addManager$1", 0, [$0], []));
 },
 $dom_hasAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_hasAttribute", "$dom_hasAttribute$1", 0, [$0], []));
 },
 clear$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clear", "clear$0", 0, [], []));
 },
 prepend$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("prepend", "prepend$1", 0, [$0], []));
 },
 addLast$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addLast", "addLast$1", 0, [$0], []));
 },
 _postMessage_1$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_1", "_postMessage_1$2", 0, [$0, $1], []));
 },
 _forComponentsOfEntity$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_forComponentsOfEntity", "_forComponentsOfEntity$2", 0, [$0, $1], []));
 },
 _insertToSystem$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_insertToSystem", "_insertToSystem$1", 0, [$0], []));
 },
 getComponentsByType$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getComponentsByType", "getComponentsByType$1", 0, [$0], []));
 },
 forEach$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("forEach", "forEach$1", 0, [$0], []));
 },
 _addTypeBit$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_addTypeBit", "_addTypeBit$1", 0, [$0], []));
 },
 _growTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_growTo", "_growTo$1", 0, [$0], []));
 },
 _ensureRequestAnimationFrame$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureRequestAnimationFrame", "_ensureRequestAnimationFrame$0", 0, [], []));
 },
 endsWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("endsWith", "endsWith$1", 0, [$0], []));
 },
 addComponent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addComponent", "addComponent$1", 0, [$0], []));
 },
 _asNonSentinelEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_asNonSentinelEntry", "_asNonSentinelEntry$0", 0, [], []));
 },
 added$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("added", "added$1", 0, [$0], []));
 },
 drawImage$9: function($0, $1, $2, $3, $4, $5, $6, $7, $8) {
  return this.noSuchMethod$1($.createInvocationMirror("drawImage", "drawImage$9", 0, [$0, $1, $2, $3, $4, $5, $6, $7, $8], []));
 },
 drawImage$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("drawImage", "drawImage$3", 0, [$0, $1, $2], []));
 },
 drawImage$5: function($0, $1, $2, $3, $4) {
  return this.noSuchMethod$1($.createInvocationMirror("drawImage", "drawImage$5", 0, [$0, $1, $2, $3, $4], []));
 },
 removeComponent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("removeComponent", "removeComponent$1", 0, [$0], []));
 },
 _grow$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_grow", "_grow$1", 0, [$0], []));
 },
 _addComponent$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_addComponent", "_addComponent$3", 0, [$0, $1, $2], []));
 },
 deleteEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("deleteEntity", "deleteEntity$1", 0, [$0], []));
 },
 _removeComponentsOfEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_removeComponentsOfEntity", "_removeComponentsOfEntity$1", 0, [$0], []));
 },
 _onRequestError$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onRequestError", "_onRequestError$2", 0, [$0, $1], []));
 },
 _advance$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_advance", "_advance$0", 0, [], []));
 },
 _setValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_setValue", "_setValue$1", 0, [$0], []));
 },
 containsKey$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("containsKey", "containsKey$1", 0, [$0], []));
 },
 _updateBitMask$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_updateBitMask", "_updateBitMask$3", 0, [$0, $1, $2], []));
 },
 _ensureCapacity$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureCapacity", "_ensureCapacity$0", 0, [], []));
 },
 processEntityOnScreen$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("processEntityOnScreen", "processEntityOnScreen$1", 0, [$0], []));
 },
 _callback$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_callback$0", 0, [], []));
 },
 _removeComponent$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_removeComponent", "_removeComponent$2", 0, [$0, $1], []));
 },
 process$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("process", "process$0", 0, [], []));
 },
 decodeAudioData$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("decodeAudioData", "decodeAudioData$3", 0, [$0, $1, $2], []));
 },
 $dom_createElement$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_createElement", "$dom_createElement$1", 0, [$0], []));
 },
 ceil$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ceil", "ceil$0", 0, [], []));
 },
 lastEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("lastEntry", "lastEntry$0", 0, [], []));
 },
 disabled$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("disabled", "disabled$1", 0, [$0], []));
 },
 isWithtinYRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("isWithtinYRange", "isWithtinYRange$2", 0, [$0, $1], []));
 },
 _matches$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_matches", "_matches$1", 0, [$0], []));
 },
 applyToCannon$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("applyToCannon", "applyToCannon$1", 0, [$0], []));
 },
 addEntity$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addEntity", "addEntity$1", 0, [$0], []));
 },
 rect$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("rect", "rect$4", 0, [$0, $1, $2, $3], []));
 },
 _init$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_init", "_init$0", 0, [], []));
 },
 connect$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("connect", "connect$3", 0, [$0, $1, $2], []));
 },
 stop$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stop", "stop$0", 0, [], []));
 },
 stop$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("stop", "stop$1", 0, [$0], []));
 },
 stroke$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stroke", "stroke$0", 0, [], []));
 },
 makeSource$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("makeSource", "makeSource$1", 0, [$0], []));
 },
 getEntities$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getEntities", "getEntities$1", 0, [$0], []));
 },
 requestLayoutFrame$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("requestLayoutFrame", "requestLayoutFrame$1", 0, [$0], []));
 },
 get$keyCode: function() {
  return this.noSuchMethod$1($.createInvocationMirror("keyCode", "keyCode$0", 1, [], []));
 },
 get$_previous: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_previous", "_previous$0", 1, [], []));
 },
 get$key: function() {
  return this.noSuchMethod$1($.createInvocationMirror("key", "key$0", 1, [], []));
 },
 get$y: function() {
  return this.noSuchMethod$1($.createInvocationMirror("y", "y$0", 1, [], []));
 },
 get$destroyed: function() {
  return this.noSuchMethod$1($.createInvocationMirror("destroyed", "destroyed$0", 1, [], []));
 },
 get$load: function() {
  return this.noSuchMethod$1($.createInvocationMirror("load", "load$0", 1, [], []));
 },
 get$isNaN: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isNaN", "isNaN$0", 1, [], []));
 },
 get$memberName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("memberName", "memberName$0", 1, [], []));
 },
 get$$$dom_attributes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_attributes", "$dom_attributes$0", 1, [], []));
 },
 get$cooldownTimer: function() {
  return this.noSuchMethod$1($.createInvocationMirror("cooldownTimer", "cooldownTimer$0", 1, [], []));
 },
 get$delta: function() {
  return this.noSuchMethod$1($.createInvocationMirror("delta", "delta$0", 1, [], []));
 },
 get$namedArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("namedArguments", "namedArguments$0", 1, [], []));
 },
 get$_set: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_set", "_set$0", 1, [], []));
 },
 get$rotationRate: function() {
  return this.noSuchMethod$1($.createInvocationMirror("rotationRate", "rotationRate$0", 1, [], []));
 },
 get$excluded: function() {
  return this.noSuchMethod$1($.createInvocationMirror("excluded", "excluded$0", 1, [], []));
 },
 get$userAgent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("userAgent", "userAgent$0", 1, [], []));
 },
 get$buffer: function() {
  return this.noSuchMethod$1($.createInvocationMirror("buffer", "buffer$0", 1, [], []));
 },
 get$all: function() {
  return this.noSuchMethod$1($.createInvocationMirror("all", "all$0", 1, [], []));
 },
 get$color: function() {
  return this.noSuchMethod$1($.createInvocationMirror("color", "color$0", 1, [], []));
 },
 get$clip: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clip", "clip$0", 1, [], []));
 },
 get$componentManager: function() {
  return this.noSuchMethod$1($.createInvocationMirror("componentManager", "componentManager$0", 1, [], []));
 },
 get$health: function() {
  return this.noSuchMethod$1($.createInvocationMirror("health", "health$0", 1, [], []));
 },
 get$height: function() {
  return this.noSuchMethod$1($.createInvocationMirror("height", "height$0", 1, [], []));
 },
 get$length: function() {
  return this.noSuchMethod$1($.createInvocationMirror("length", "length$0", 1, [], []));
 },
 get$click: function() {
  return this.noSuchMethod$1($.createInvocationMirror("click", "click$0", 1, [], []));
 },
 get$keyUp: function() {
  return this.noSuchMethod$1($.createInvocationMirror("keyUp", "keyUp$0", 1, [], []));
 },
 get$_element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_element", "_element$0", 1, [], []));
 },
 get$hasNext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("hasNext", "hasNext$0", 1, [], []));
 },
 get$bit: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bit", "bit$0", 1, [], []));
 },
 get$entityManager: function() {
  return this.noSuchMethod$1($.createInvocationMirror("entityManager", "entityManager$0", 1, [], []));
 },
 get$href: function() {
  return this.noSuchMethod$1($.createInvocationMirror("href", "href$0", 1, [], []));
 },
 get$future: function() {
  return this.noSuchMethod$1($.createInvocationMirror("future", "future$0", 1, [], []));
 },
 get$id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("id", "id$0", 1, [], []));
 },
 get$$$dom_className: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_className", "$dom_className$0", 1, [], []));
 },
 get$abort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("abort", "abort$0", 1, [], []));
 },
 get$value: function() {
  return this.noSuchMethod$1($.createInvocationMirror("value", "value$0", 1, [], []));
 },
 get$activeEntityCount: function() {
  return this.noSuchMethod$1($.createInvocationMirror("activeEntityCount", "activeEntityCount$0", 1, [], []));
 },
 get$percentLeft: function() {
  return this.noSuchMethod$1($.createInvocationMirror("percentLeft", "percentLeft$0", 1, [], []));
 },
 get$positionalArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("positionalArguments", "positionalArguments$0", 1, [], []));
 },
 get$keyDown: function() {
  return this.noSuchMethod$1($.createInvocationMirror("keyDown", "keyDown$0", 1, [], []));
 },
 get$response: function() {
  return this.noSuchMethod$1($.createInvocationMirror("response", "response$0", 1, [], []));
 },
 get$_systemsBag: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_systemsBag", "_systemsBag$0", 1, [], []));
 },
 get$message: function() {
  return this.noSuchMethod$1($.createInvocationMirror("message", "message$0", 1, [], []));
 },
 get$pattern: function() {
  return this.noSuchMethod$1($.createInvocationMirror("pattern", "pattern$0", 1, [], []));
 },
 get$_next: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_next", "_next$0", 1, [], []));
 },
 get$hidden: function() {
  return this.noSuchMethod$1($.createInvocationMirror("hidden", "hidden$0", 1, [], []));
 },
 get$isSprite: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isSprite", "isSprite$0", 1, [], []));
 },
 get$_lib2_buffer: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_buffer", "_lib2_buffer$0", 1, [], []));
 },
 get$renderableMapper: function() {
  return this.noSuchMethod$1($.createInvocationMirror("renderableMapper", "renderableMapper$0", 1, [], []));
 },
 get$on: function() {
  return this.noSuchMethod$1($.createInvocationMirror("on", "on$0", 1, [], []));
 },
 get$ignoreCase: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ignoreCase", "ignoreCase$0", 1, [], []));
 },
 get$maxValue: function() {
  return this.noSuchMethod$1($.createInvocationMirror("maxValue", "maxValue$0", 1, [], []));
 },
 get$element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("element", "element$0", 1, [], []));
 },
 get$maxHealth: function() {
  return this.noSuchMethod$1($.createInvocationMirror("maxHealth", "maxHealth$0", 1, [], []));
 },
 get$bodyMapper: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bodyMapper", "bodyMapper$0", 1, [], []));
 },
 get$one: function() {
  return this.noSuchMethod$1($.createInvocationMirror("one", "one$0", 1, [], []));
 },
 get$_handleMutation: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_handleMutation", "_handleMutation$0", 1, [], []));
 },
 get$_handleMessage: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_handleMessage", "_handleMessage$0", 1, [], []));
 },
 get$source: function() {
  return this.noSuchMethod$1($.createInvocationMirror("source", "source$0", 1, [], []));
 },
 get$multiLine: function() {
  return this.noSuchMethod$1($.createInvocationMirror("multiLine", "multiLine$0", 1, [], []));
 },
 get$width: function() {
  return this.noSuchMethod$1($.createInvocationMirror("width", "width$0", 1, [], []));
 },
 get$$$dom_namespaceUri: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_namespaceUri", "$dom_namespaceUri$0", 1, [], []));
 },
 get$_managersBag: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_managersBag", "_managersBag$0", 1, [], []));
 },
 get$error: function() {
  return this.noSuchMethod$1($.createInvocationMirror("error", "error$0", 1, [], []));
 },
 get$$$dom_localName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_localName", "$dom_localName$0", 1, [], []));
 },
 get$bulletSpeed: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bulletSpeed", "bulletSpeed$0", 1, [], []));
 },
 get$angle: function() {
  return this.noSuchMethod$1($.createInvocationMirror("angle", "angle$0", 1, [], []));
 },
 get$_keys: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_keys", "_keys$0", 1, [], []));
 },
 get$amount: function() {
  return this.noSuchMethod$1($.createInvocationMirror("amount", "amount$0", 1, [], []));
 },
 get$currentTime: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentTime", "currentTime$0", 1, [], []));
 },
 get$resource: function() {
  return this.noSuchMethod$1($.createInvocationMirror("resource", "resource$0", 1, [], []));
 },
 get$isFinished: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isFinished", "isFinished$0", 1, [], []));
 },
 get$isEmpty: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isEmpty", "isEmpty$0", 1, [], []));
 },
 get$destination: function() {
  return this.noSuchMethod$1($.createInvocationMirror("destination", "destination$0", 1, [], []));
 },
 get$context2d: function() {
  return this.noSuchMethod$1($.createInvocationMirror("context2d", "context2d$0", 1, [], []));
 },
 get$isInfinite: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isInfinite", "isInfinite$0", 1, [], []));
 },
 get$location: function() {
  return this.noSuchMethod$1($.createInvocationMirror("location", "location$0", 1, [], []));
 },
 get$gain: function() {
  return this.noSuchMethod$1($.createInvocationMirror("gain", "gain$0", 1, [], []));
 },
 get$duration: function() {
  return this.noSuchMethod$1($.createInvocationMirror("duration", "duration$0", 1, [], []));
 },
 get$_typeBits: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_typeBits", "_typeBits$0", 1, [], []));
 },
 get$scale: function() {
  return this.noSuchMethod$1($.createInvocationMirror("scale", "scale$0", 1, [], []));
 },
 get$canShoot: function() {
  return this.noSuchMethod$1($.createInvocationMirror("canShoot", "canShoot$0", 1, [], []));
 },
 get$passive: function() {
  return this.noSuchMethod$1($.createInvocationMirror("passive", "passive$0", 1, [], []));
 },
 get$completer: function() {
  return this.noSuchMethod$1($.createInvocationMirror("completer", "completer$0", 1, [], []));
 },
 get$bulletDamage: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bulletDamage", "bulletDamage$0", 1, [], []));
 },
 get$bulletMass: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bulletMass", "bulletMass$0", 1, [], []));
 },
 get$_context: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_context", "_context$0", 1, [], []));
 },
 get$_systemBits: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_systemBits", "_systemBits$0", 1, [], []));
 },
 get$x: function() {
  return this.noSuchMethod$1($.createInvocationMirror("x", "x$0", 1, [], []));
 },
 get$_entitiesByGroup: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_entitiesByGroup", "_entitiesByGroup$0", 1, [], []));
 },
 get$_location: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_location", "_location$0", 1, [], []));
 },
 get$expired: function() {
  return this.noSuchMethod$1($.createInvocationMirror("expired", "expired$0", 1, [], []));
 },
 get$classes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("classes", "classes$0", 1, [], []));
 },
 get$navigator: function() {
  return this.noSuchMethod$1($.createInvocationMirror("navigator", "navigator$0", 1, [], []));
 },
 get$transformMapper: function() {
  return this.noSuchMethod$1($.createInvocationMirror("transformMapper", "transformMapper$0", 1, [], []));
 },
 get$radius: function() {
  return this.noSuchMethod$1($.createInvocationMirror("radius", "radius$0", 1, [], []));
 },
 get$playbackState: function() {
  return this.noSuchMethod$1($.createInvocationMirror("playbackState", "playbackState$0", 1, [], []));
 },
 get$_tag: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_tag", "_tag$0", 1, [], []));
 },
 get$listener: function() {
  return this.noSuchMethod$1($.createInvocationMirror("listener", "listener$0", 1, [], []));
 },
 get$exception: function() {
  return this.noSuchMethod$1($.createInvocationMirror("exception", "exception$0", 1, [], []));
 },
 get$parts: function() {
  return this.noSuchMethod$1($.createInvocationMirror("parts", "parts$0", 1, [], []));
 },
 get$timeLeft: function() {
  return this.noSuchMethod$1($.createInvocationMirror("timeLeft", "timeLeft$0", 1, [], []));
 },
 get$baseURL: function() {
  return this.noSuchMethod$1($.createInvocationMirror("baseURL", "baseURL$0", 1, [], []));
 },
 set$health: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("health=", "health=$1", 2, [$0], []));
 },
 set$globalAlpha: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("globalAlpha=", "globalAlpha=$1", 2, [$0], []));
 },
 set$_passive: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_passive=", "_passive=$1", 2, [$0], []));
 },
 set$_previous: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_previous=", "_previous=$1", 2, [$0], []));
 },
 set$loopEnd: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("loopEnd=", "loopEnd=$1", 2, [$0], []));
 },
 set$responseType: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("responseType=", "responseType=$1", 2, [$0], []));
 },
 set$coneOuterGain: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("coneOuterGain=", "coneOuterGain=$1", 2, [$0], []));
 },
 set$y: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("y=", "y=$1", 2, [$0], []));
 },
 set$loop: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("loop=", "loop=$1", 2, [$0], []));
 },
 set$pause: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("pause=", "pause=$1", 2, [$0], []));
 },
 set$destroyed: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("destroyed=", "destroyed=$1", 2, [$0], []));
 },
 set$$$dom_className: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_className=", "$dom_className=$1", 2, [$0], []));
 },
 set$strokeStyle: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("strokeStyle=", "strokeStyle=$1", 2, [$0], []));
 },
 set$value: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("value=", "value=$1", 2, [$0], []));
 },
 set$src: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("src=", "src=$1", 2, [$0], []));
 },
 set$lineWidth: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lineWidth=", "lineWidth=$1", 2, [$0], []));
 },
 set$cooldownTimer: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("cooldownTimer=", "cooldownTimer=$1", 2, [$0], []));
 },
 set$shoot: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("shoot=", "shoot=$1", 2, [$0], []));
 },
 set$delta: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("delta=", "delta=$1", 2, [$0], []));
 },
 set$_typeBits: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_typeBits=", "_typeBits=$1", 2, [$0], []));
 },
 set$loopStart: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("loopStart=", "loopStart=$1", 2, [$0], []));
 },
 set$width: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("width=", "width=$1", 2, [$0], []));
 },
 set$rotationRate: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("rotationRate=", "rotationRate=$1", 2, [$0], []));
 },
 set$maxHealth: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("maxHealth=", "maxHealth=$1", 2, [$0], []));
 },
 set$world: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("world=", "world=$1", 2, [$0], []));
 },
 set$x: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("x=", "x=$1", 2, [$0], []));
 },
 set$buffer: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("buffer=", "buffer=$1", 2, [$0], []));
 },
 set$text: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("text=", "text=$1", 2, [$0], []));
 },
 set$positional: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("positional=", "positional=$1", 2, [$0], []));
 },
 set$_world: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_world=", "_world=$1", 2, [$0], []));
 },
 set$angle: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("angle=", "angle=$1", 2, [$0], []));
 },
 set$height: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("height=", "height=$1", 2, [$0], []));
 },
 set$_next: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_next=", "_next=$1", 2, [$0], []));
 },
 set$fillStyle: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("fillStyle=", "fillStyle=$1", 2, [$0], []));
 },
 set$resource: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("resource=", "resource=$1", 2, [$0], []));
 },
 set$length: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("length=", "length=$1", 2, [$0], []));
 },
 set$exception: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("exception=", "exception=$1", 2, [$0], []));
 },
 set$baseURL: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("baseURL=", "baseURL=$1", 2, [$0], []));
 },
 set$hidden: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("hidden=", "hidden=$1", 2, [$0], []));
 },
 set$timeLeft: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("timeLeft=", "timeLeft=$1", 2, [$0], []));
 },
 set$amount: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("amount=", "amount=$1", 2, [$0], []));
 }
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element?",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e, $.getRuntimeTypeInfo(this)[0])._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 removeLast$0: function() {
  return this._sentinel.get$_previous().remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1, t2;
  t1 = this._sentinel;
  t2 = t1.get$_next();
  return t2 == null ? t1 == null : t2 === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1.set$_next(t1);
  t1 = this._sentinel;
  t1.set$_previous(t1);
},
 forEach$1: function(f) {
  var entry, t1, nextEntry;
  entry = this._sentinel.get$_next();
  for (; t1 = this._sentinel, !(entry == null ? t1 == null : entry === t1); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel, $.getRuntimeTypeInfo(this)[0]);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$($.getRuntimeTypeInfo(this)[0]);
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"":"Object;_backingMap",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 add$1: function(value) {
  var t1 = this._backingMap;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$1$bailout1(1, t1, value);
  if (value !== (value | 0))
    throw $.iae(value);
  if (value < 0 || value >= t1.length)
    throw $.ioore(value);
  t1[value] = value;
},
 add$1$bailout1: function(state0, t1, value) {
  $.indexSet(t1, value, value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this, $.getRuntimeTypeInfo(this)[0]);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$($.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[0]);
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CTC4)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout1(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout1: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC4);
},
 _advance$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = $.index(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CTC4);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer?,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 clear$0: function() {
  var t1 = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(t1, ['$.String']);
  this._buffer = t1;
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 toInt$0: function(receiver) {
  return receiver.toInt$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 get$runtimeType: function(receiver) {
  return receiver.get$runtimeType();
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 round$0: function(receiver) {
  return receiver.round$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 lastIndexOf$1: function(receiver, a0) {
  return receiver.lastIndexOf$1(a0);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 get$isInfinite: function(receiver) {
  return receiver.get$isInfinite();
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 split$1: function(receiver, a0) {
  return receiver.split$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 abs$0: function(receiver) {
  return receiver.abs$0();
},
 trim$0: function(receiver) {
  return receiver.trim$0();
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 get$runtimeType: function(receiver) {
  return $.CTC9;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
},
 get$runtimeType: function(receiver) {
  return $.createRuntimeType("Null");
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 lastIndexOf$2: function(receiver, element, start) {
  if (start == null)
    start = receiver.length - 1;
  return $.Arrays_lastIndexOf(receiver, element, start);
},
 lastIndexOf$1: function($receiver, element) {
  return this.lastIndexOf$2($receiver, element, null);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$runtimeType: function(receiver) {
  return $.TypeImpl$($.getRuntimeTypeString(receiver));
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 toInt$0: function(receiver) {
  var truncated, t1;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  if (typeof truncated !== 'number')
    return this.toInt$0$bailout(1, truncated);
  if (truncated == -0.0)
    t1 = 0;
  else
    t1 = truncated;
  return t1;
},
 toInt$0$bailout: function(state0, truncated) {
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 round$0: function(receiver) {
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;",
 get$runtimeType: function(receiver) {
  return $.CTC8;
}
};

$$.JSDouble = {"":"JSNumber;",
 get$runtimeType: function(receiver) {
  return $.CTC10;
}
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return receiver.split(pattern);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 lastIndexOf$2: function(receiver, other, start) {
  var t1;
  $.checkNull(other);
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (!(start == null)) {
    if (!(typeof start === 'number'))
      throw $.$$throw($.ArgumentError$(start));
    if (start < 0)
      return -1;
    t1 = receiver.length;
    if (start >= t1) {
      if (other === "")
        return t1;
      start = t1 - 1;
    } else
      start = start;
  } else
    start = receiver.length - 1;
  return $.stringLastIndexOfUnchecked(receiver, other, start);
},
 lastIndexOf$1: function($receiver, other) {
  return this.lastIndexOf$2($receiver, other, null);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$runtimeType: function(receiver) {
  return $.CTC7;
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._FrozenCssClassSet = {"":"CssClassSet;",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
},
 readClasses$0: function() {
  return $.Set_Set('$.String');
}
};

$$._ElementCssClassSet = {"":"CssClassSet;_lib_element?",
 readClasses$0: function() {
  var s, classname, t1, t2, t3, trimmed;
  s = $.Set_Set('$.String');
  classname = this._lib_element.className;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list, t1;
  list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  t1 = $.Strings_join(list, " ");
  this._lib_element.className = t1;
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$keyUp: function() {
  return this.operator$index$1("keyup");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.HttpRequestEvents = {"":"Events;_ptr",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
}
};

$$.HttpRequestUploadEvents = {"":"Events;_ptr",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$keyUp: function() {
  return this.operator$index$1("keyup");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$._AttributeMap = {"":"Object;_lib_element?",
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, len, i;
  attributes = this._lib_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(keys, ['$.String']);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      attributes = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._lib_element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null, '$.String');
      $.setRuntimeTypeInfo(keys, ['$.String']);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          keys.push($.index(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_lib_element",
 containsKey$1: function(key) {
  return this._lib_element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._lib_element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._lib_element.$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._lib_element;
  value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$.CssClassSet = {"":"Object;",
 toString$0: function() {
  var t1 = $.List_List$from(this.readClasses$0());
  $.setRuntimeTypeInfo(t1, []);
  return $.Strings_join(t1, " ");
},
 iterator$0: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$._MeasurementScheduler = {"":"Object;",
 _callback$0: function() {
  return this._callback.call$0();
},
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"":"_MeasurementScheduler;_MEASUREMENT_MESSAGE,_nextMeasurementFrameScheduled,_callback",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, "*");
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure1(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  var t1 = $.window().get$on().get$message();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"":"_MeasurementScheduler;_observer,_dummy,_nextMeasurementFrameScheduled,_callback",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure0(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$2$attributes(this._dummy, true);
}
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = messagePorts == null;
  t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message, targetOrigin) {
  return this.postMessage$3(message, targetOrigin, null);
}
};

$$._LocationCrossFrame = {"":"Object;_location?",
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"":"Object;_ptr",
 get$href: function() {
  return $._LocationWrapper__get(this._ptr, "href");
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$Location: function() { return true; }
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_lib_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$._Random = {"":"Object;",
 nextInt$1: function(max) {
  if (max < 0)
    throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
},
 nextDouble$0: function() {
  return Math.random();
},
 nextBool$0: function() {
  return Math.random() < 0.5;
}
};

$$._AttributeClassSet = {"":"CssClassSet;_lib3_element?",
 readClasses$0: function() {
  var classname, s, t1, t2, t3, trimmed;
  classname = $.index(this._lib3_element.get$attributes(), "class");
  s = $.Set_Set('$.String');
  if (classname == null)
    return s;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  $.indexSet(this._lib3_element.get$attributes(), "class", $.Strings_join(list, " "));
}
};

$$.AudioContextEvents = {"":"Events;_ptr",
 get$complete: function() {
  return this.operator$index$1("complete");
},
 complete$1: function(arg0) {
  return this.get$complete().call$1(arg0);
}
};

$$.Game = {"":"Object;gameCanvas,hudCanvas,gameContext,hudContext,lastTime,world!",
 start$0: function() {
  var audioManager, groupManager, tagManager, player, camera, i, star, asteroid, scale, t1, t2, upgrade;
  audioManager = $.createAudioManager($.window().get$location().get$href());
  this.world = $.World$();
  groupManager = $.GroupManager$();
  tagManager = $.TagManager$();
  this.world.addManager$1(tagManager);
  this.world.addManager$1(groupManager);
  player = this.world.createEntity$0();
  player.addComponent$1($.Transform$(1500, 1500, 0, 0));
  player.addComponent$1($.Velocity$(0, 0));
  player.addComponent$1($.Spatial$("spaceship.png", 0.25));
  player.addComponent$1($.CircularBody$(22.5));
  player.addComponent$1($.Mass$(50));
  player.addComponent$1($.Status$(100, 20));
  player.addComponent$1($.MiniMapRenderable$("#1fe9f6"));
  player.addComponent$1($.Cannon$(1, 5, 0.1, 0.5, 200));
  player.addToWorld$0();
  camera = this.world.createEntity$0();
  camera.addComponent$1($.CameraPosition$(0, 0));
  camera.addToWorld$0();
  for (i = 0; i < $.sqrt(2560000) / 10; ++i) {
    star = this.world.createEntity$0();
    star.addComponent$1($.Transform$($.mul($.get$random().nextDouble$0(), 1600), $.mul($.get$random().nextDouble$0(), 1600), 0, 0));
    star.addComponent$1($.Spatial$("star_0" + $.S($.get$random().nextInt$1(6)) + ".png", 1));
    star.addComponent$1($.Background$());
    star.addToWorld$0();
    groupManager.add$2(star, "GROUP_BACKGROUND");
  }
  for (i = 0; i < $.sqrt(2560000) / 100; ++i) {
    asteroid = this.world.createEntity$0();
    asteroid.addComponent$1($.Transform$($.mul($.get$random().nextDouble$0(), 1600), $.mul($.get$random().nextDouble$0(), 1600), $.mul($.get$random().nextDouble$0(), 6.283185307179586), $.generateRandom(0.15, 0.2)));
    asteroid.addComponent$1($.generateRandomVelocity(0.025, 0.075));
    scale = $.generateRandom(0.2, 0.5);
    asteroid.addComponent$1($.Spatial$asSprite("asteroid_strip64.png", 0, 0, 128, 128, scale));
    asteroid.addComponent$1($.CircularBody$(50 * scale));
    t1 = 100 * scale;
    asteroid.addComponent$1($.Mass$(t1));
    asteroid.addComponent$1($.MiniMapRenderable$("#333"));
    asteroid.addComponent$1($.Status$(t1, 20));
    t2 = $.CTC1.round$0($.generateRandom(2, 4));
    asteroid.addComponent$1($.SplitsOnDestruction$($.getInterceptor$JSNumber(t2).toInt$0(t2)));
    asteroid.addToWorld$0();
  }
  for (i = 0; i < 5; ++i) {
    upgrade = this.world.createEntity$0();
    upgrade.addComponent$1($.Transform$($.mul($.get$random().nextDouble$0(), 1600), $.mul($.get$random().nextDouble$0(), 1600), 0, 0));
    upgrade.addComponent$1($.generateRandomVelocity(0.025, 0.075));
    upgrade.addComponent$1($.Spatial$("upgrade_health.png", 0.2));
    upgrade.addComponent$1($.CircularBody$(10));
    upgrade.addComponent$1($.Mass$(20));
    upgrade.addComponent$1($.MiniMapRenderable$("green"));
    upgrade.addComponent$1($.Upgrade$(0, 20));
    upgrade.addToWorld$0();
  }
  for (i = 0; i < 2; ++i) {
    upgrade = this.world.createEntity$0();
    upgrade.addComponent$1($.Transform$($.mul($.get$random().nextDouble$0(), 1600), $.mul($.get$random().nextDouble$0(), 1600), 0, 0));
    upgrade.addComponent$1($.generateRandomVelocity(0.025, 0.075));
    upgrade.addComponent$1($.Spatial$("upgrade_bullets.png", 0.2));
    upgrade.addComponent$1($.CircularBody$(10));
    upgrade.addComponent$1($.Mass$(20));
    upgrade.addComponent$1($.MiniMapRenderable$("green"));
    upgrade.addComponent$1($.Upgrade$(1, 0));
    upgrade.addToWorld$0();
  }
  tagManager.register$2("CAMERA", camera);
  tagManager.register$2("PLAYER", player);
  this.world.addSystem$1($.PlayerControlSystem$(this.gameCanvas));
  this.world.addSystem$1($.MovementSystem$());
  this.world.addSystem$1($.UpgradeCollectionSystem$());
  this.world.addSystem$1($.CircularCollisionDetectionSystem$());
  this.world.addSystem$1($.BulletSpawningSystem$());
  this.world.addSystem$1($.SplittingDestructionSystem$());
  this.world.addSystem$1($.DisapperearingDestructionSystem$());
  this.world.addSystem$1($.PlayerDestructionSystem$());
  this.world.addSystem$1($.ExpirationSystem$());
  this.world.addSystem$1($.CameraSystem$());
  this.world.addSystem$1($.BackgroundRenderSystem$(this.gameContext));
  this.world.addSystem$1($.SpatialRenderingSystem$(this.gameContext));
  this.world.addSystem$1($.MiniMapRenderSystem$(this.hudContext));
  this.world.addSystem$1($.HudRenderSystem$(this.hudContext));
  this.world.addSystem$1($.SoundSystem$(audioManager));
  this.world.addSystem$1($.DebugSystem$());
  this.world.initialize$0();
  this.world.set$delta(16);
  this.world.process$0();
  this.gameLoop$1(16);
},
 gameLoop$1: function(time) {
  var t1 = time - this.lastTime;
  this.world.set$delta(t1);
  this.lastTime = time;
  this.world.process$0();
  $.window().requestAnimationFrame$1(this.get$gameLoop());
},
 get$gameLoop: function() { return new $.BoundClosure1(this, 'gameLoop$1'); },
 Game$2: function(gameCanvas, hudCanvas) {
  this.gameContext = this.gameCanvas.get$context2d();
  this.hudContext = this.hudCanvas.get$context2d();
}
};

$$.AudioManagerDummy = {"":"Object;",
 noSuchMethod$1: function(im) {
}
};

$$.DebugSystem = {"":"VoidEntitySystem;fpsElement,playerPosElement,cameraPosElement,entityCountElement,cameraPositionMapper,positionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3, t4;
  t1 = $.CameraPosition$hack();
  this.cameraPositionMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.CameraPosition);
  t2 = $.Transform$hack();
  this.positionMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Transform);
  t3 = this.world;
  t4 = $.TagManager$();
  this.tagManager = t3.getManager$1($.getInterceptor(t4).get$runtimeType(t4));
},
 processSystem$0: function() {
  var camera, player, cameraPos, playerPos, t1, t2;
  camera = this.tagManager.getEntity$1("CAMERA");
  player = this.tagManager.getEntity$1("PLAYER");
  cameraPos = this.cameraPositionMapper.get$1(camera);
  playerPos = this.positionMapper.get$1(player);
  t1 = this.world.get$delta();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t2 = $.S($.tdiv(1000, t1));
  this.fpsElement.set$text(t2);
  t2 = "x: " + $.S(cameraPos.get$x()) + "; y: " + $.S(cameraPos.get$y());
  this.cameraPosElement.set$text(t2);
  t2 = "x: " + $.S(playerPos.get$x()) + "; y: " + $.S(playerPos.get$y());
  this.playerPosElement.set$text(t2);
  t2 = $.S(this.world.get$entityManager().get$activeEntityCount());
  this.entityCountElement.set$text(t2);
}
};

$$.PlayerControlSystem = {"":"PlayerStatusProcessingSystem;ACCELERATE,LEFT,RIGHT,SHOOT,accelerate,turnLeft,turnRight,shoot!,targetX,targetY,spatial,velocity,transform,cannon,canvas,player,status,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
 initialize$0: function() {
  var t1, velocityMapper, t2, transformMapper, t3, cannonMapper, t4, t5;
  $.PlayerStatusProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.Velocity$hack();
  velocityMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Velocity);
  t2 = $.Transform$hack();
  transformMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Transform);
  t3 = $.Cannon$hack();
  cannonMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Cannon);
  t4 = $.Spatial$hack();
  this.spatial = $.ComponentMapper$($.getInterceptor(t4).get$runtimeType(t4), this.world, $.Spatial).get$1(this.player);
  this.velocity = velocityMapper.get$1(this.player);
  this.transform = transformMapper.get$1(this.player);
  this.cannon = cannonMapper.get$1(this.player);
  t5 = $.window().get$on().get$keyDown();
  $.getInterceptor$JSArray(t5).add$1(t5, this.get$handleKeyDown());
  t5 = $.window().get$on().get$keyUp();
  $.getInterceptor$JSArray(t5).add$1(t5, this.get$handleKeyUp());
},
 processSystem$0: function() {
  var t1, t2, t3, t4, t5;
  if (this.accelerate) {
    t1 = this.velocity;
    t2 = t1.get$x();
    t3 = $.TrigUtil_cos(this.transform.get$angle());
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    t1.set$x($.add(t2, 0.0025 * t3));
    t1 = this.velocity;
    t4 = t1.get$y();
    t5 = $.TrigUtil_sin(this.transform.get$angle());
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    t1.set$y($.add(t4, 0.0025 * t5));
    this.spatial.set$resource("spaceship_thrusters.png");
  } else
    this.spatial.set$resource("spaceship.png");
  if (this.turnLeft) {
    t1 = $.mod($.sub(this.transform.get$angle(), 0.05), 6.283185307179586);
    this.transform.set$angle(t1);
  } else if (this.turnRight) {
    t1 = $.mod($.add(this.transform.get$angle(), 0.05), 6.283185307179586);
    this.transform.set$angle(t1);
  }
  t1 = this.shoot === true;
  t2 = this.cannon;
  if (t1)
    t2.set$shoot(true);
  else
    t2.set$shoot(false);
},
 handleKeyDown$1: function(e) {
  var keyCode = e.get$keyCode();
  if ($.eqB(keyCode, this.ACCELERATE))
    this.accelerate = true;
  else if ($.eqB(keyCode, this.LEFT)) {
    this.turnLeft = true;
    this.turnRight = false;
  } else if ($.eqB(keyCode, this.RIGHT)) {
    this.turnLeft = false;
    this.turnRight = true;
  } else if ($.eqB(keyCode, this.SHOOT))
    this.shoot = true;
},
 get$handleKeyDown: function() { return new $.BoundClosure1(this, 'handleKeyDown$1'); },
 handleKeyUp$1: function(e) {
  var keyCode = e.get$keyCode();
  if ($.eqB(keyCode, this.ACCELERATE))
    this.accelerate = false;
  else if ($.eqB(keyCode, this.LEFT))
    this.turnLeft = false;
  else if ($.eqB(keyCode, this.RIGHT))
    this.turnRight = false;
  else if ($.eqB(keyCode, this.SHOOT))
    this.shoot = false;
},
 get$handleKeyUp: function() { return new $.BoundClosure1(this, 'handleKeyUp$1'); },
 checkProcessing$0: function() {
  return $.gt(this.status.get$health(), 0);
}
};

$$.SpatialRenderingSystem = {"":"OnScreenEntityProcessingSystem;context2d?,spatialMapper,timerMapper,cameraPos,transformMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2;
  $.OnScreenEntityProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.Spatial$hack();
  this.spatialMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Spatial);
  t2 = $.ExpirationTimer$hack();
  this.timerMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.ExpirationTimer);
},
 begin$0: function() {
  var camera = this.tagManager.getEntity$1("CAMERA");
  this.cameraPos = this.cameraPositionMapper.get$1(camera);
},
 processEntityOnScreen$1: function(entity) {
  var spatial = this.spatialMapper.get$1(entity);
  $.ImageCache_withImage(spatial.get$resource(), new $.SpatialRenderingSystem_processEntityOnScreen_anon(spatial, entity, this));
},
 drawImage$3: function(image, entity, spatial) {
  var transform, timer, t1, width, height, t2, t3, t4, width0, height0;
  transform = this.transformMapper.get$1(entity);
  timer = this.timerMapper.getSafe$1(entity);
  t1 = this.context2d;
  t1.save$0();
  try {
    t1.set$lineWidth(0.5);
    t1.set$fillStyle("white");
    t1.set$strokeStyle("white");
    t1.beginPath$0();
    if ($.gtB(this.cameraPos.get$x(), 800) && $.ltB(transform.get$x(), 800))
      t1.translate$2(1600, 0);
    if ($.gtB(this.cameraPos.get$y(), 1200) && $.ltB(transform.get$y(), 400))
      t1.translate$2(0, 1600);
    t1.translate$2(transform.get$x(), transform.get$y());
    if (!(null == timer))
      t1.set$globalAlpha(timer.get$percentLeft());
    if (spatial.get$isSprite() === true) {
      width = $.mul(spatial.get$width(), spatial.get$scale());
      height = $.mul(spatial.get$height(), spatial.get$scale());
      t2 = image;
      t3 = spatial.get$x();
      t4 = transform.get$angle();
      t1.drawImage$9(t2, $.add(t3, $.mod($.mul($.getInterceptor$JSNumber(t4).round$0(t4), 128), 8192)), spatial.get$y(), spatial.get$width(), spatial.get$height(), $.tdiv($.neg(width), 2), $.tdiv($.neg(height), 2), width, height);
    } else {
      width0 = $.mul(image.get$width(), spatial.get$scale());
      height0 = $.mul(image.get$height(), spatial.get$scale());
      t1.rotate$1(transform.get$angle());
      t1.drawImage$5(image, $.tdiv($.neg(width0), 2), $.tdiv($.neg(height0), 2), width0, height0);
    }
    t1.closePath$0();
    t1.fill$0();
    t1.stroke$0();
  } finally {
    t1.restore$0();
  }
}
};

$$.BackgroundRenderSystem = {"":"VoidEntitySystem;OVERLAP_WIDTH,OVERLAP_HEIGHT,bgCanvas,context2d?,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3;
  t1 = $.CameraPosition$hack();
  this.cameraPositionMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.CameraPosition);
  t2 = this.world;
  t3 = $.TagManager$();
  this.tagManager = t2.getManager$1($.getInterceptor(t3).get$runtimeType(t3));
  this.initBackground$0();
},
 initBackground$0: function() {
  var t1, t2, groupManager, spatialMapper, t3, transformMapper, t4, t5, t6, bgContext;
  t1 = this.world;
  t2 = $.GroupManager$();
  groupManager = t1.getManager$1($.getInterceptor(t2).get$runtimeType(t2));
  t1 = $.Spatial$hack();
  spatialMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Spatial);
  t3 = $.Transform$hack();
  transformMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Transform);
  t4 = this.OVERLAP_WIDTH;
  t5 = 1600 + t4 * 2;
  t6 = this.OVERLAP_HEIGHT;
  this.bgCanvas = $.CanvasElement_CanvasElement(1600 + t6 * 2, t5);
  bgContext = this.bgCanvas.get$context2d();
  bgContext.setTransform$6(1, 0, 0, 1, 0, 0);
  bgContext.translate$2(t4, t6);
  t6 = groupManager.getEntities$1("GROUP_BACKGROUND");
  $.getInterceptor$JSArray(t6).forEach$1(t6, new $.BackgroundRenderSystem_initBackground_anon(spatialMapper, bgContext, transformMapper));
},
 processSystem$0: function() {
  var camera, cameraPos, t1, t2, t3, srcX, t4, t5, srcY, overlapWidthLeft, overlapWidthRight, overlapDestX, overlapDestY1, overlapHeightTop, overlapHeightBottom, overlapDestY, overlapWidthLeft0, overlapWidthRight0, t6, overlapHeightTop0, t7, overlapHeightBottom0, overlapDestX0, overlapDestY0;
  camera = this.tagManager.getEntity$1("CAMERA");
  cameraPos = this.cameraPositionMapper.get$1(camera);
  t1 = this.context2d;
  t1.setTransform$6(1, 0, 0, 1, 0, 0);
  t1.translate$2($.neg(cameraPos.get$x()), $.neg(cameraPos.get$y()));
  t1.set$fillStyle("black");
  t1.beginPath$0();
  t1.rect$4(cameraPos.get$x(), cameraPos.get$y(), 800, 400);
  t1.fill$0();
  t1.stroke$0();
  t1.closePath$0();
  t1.save$0();
  try {
    t1.beginPath$0();
    t2 = cameraPos.get$x();
    t3 = this.OVERLAP_WIDTH;
    srcX = $.add(t2, t3);
    t4 = cameraPos.get$y();
    t5 = this.OVERLAP_HEIGHT;
    srcY = $.add(t4, t5);
    if ($.ltB(cameraPos.get$x(), 800) && $.ltB(cameraPos.get$y(), 1200))
      t1.drawImage$9(this.bgCanvas, srcX, srcY, 800, 400, cameraPos.get$x(), cameraPos.get$y(), 800, 400);
    else if ($.gtB(cameraPos.get$x(), 800) && $.ltB(cameraPos.get$y(), 1200)) {
      t2 = cameraPos.get$x();
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      overlapWidthLeft = 1600 - t2 + t3;
      t4 = cameraPos.get$x();
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      overlapWidthRight = 800 - (1600 - t4) + t3;
      overlapDestX = 1600 - t3;
      t1.drawImage$9(this.bgCanvas, srcX, srcY, overlapWidthLeft, 400, cameraPos.get$x(), cameraPos.get$y(), overlapWidthLeft, 400);
      t1.drawImage$9(this.bgCanvas, 0, srcY, overlapWidthRight, 400, overlapDestX, cameraPos.get$y(), overlapWidthRight, 400);
    } else {
      t2 = $.ltB(cameraPos.get$x(), 800) && $.gtB(cameraPos.get$y(), 1200);
      overlapDestY1 = 1600 - t5;
      if (t2) {
        t2 = cameraPos.get$y();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        overlapHeightTop = 1600 - t2 + t5;
        t3 = cameraPos.get$y();
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        overlapHeightBottom = 400 - (1600 - t3) + t5;
        overlapDestY = overlapDestY1;
        t1.drawImage$9(this.bgCanvas, srcX, srcY, 800, overlapHeightTop, cameraPos.get$x(), cameraPos.get$y(), 800, overlapHeightTop);
        t1.drawImage$9(this.bgCanvas, srcX, 0, 800, overlapHeightBottom, cameraPos.get$x(), overlapDestY, 800, overlapHeightBottom);
      } else {
        t2 = cameraPos.get$x();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        overlapWidthLeft0 = 1600 - t2 + t3;
        t4 = cameraPos.get$x();
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        overlapWidthRight0 = 800 - (1600 - t4) + t3;
        t6 = cameraPos.get$y();
        if (typeof t6 !== 'number')
          throw $.iae(t6);
        overlapHeightTop0 = 1600 - t6 + t5;
        t7 = cameraPos.get$y();
        if (typeof t7 !== 'number')
          throw $.iae(t7);
        overlapHeightBottom0 = 400 - (1600 - t7) + t5;
        overlapDestX0 = 1600 - t3;
        overlapDestY0 = overlapDestY1;
        t1.drawImage$9(this.bgCanvas, srcX, srcY, overlapWidthLeft0, overlapHeightTop0, cameraPos.get$x(), cameraPos.get$y(), overlapWidthLeft0, overlapHeightTop0);
        t1.drawImage$9(this.bgCanvas, 0, srcY, overlapWidthRight0, overlapHeightTop0, overlapDestX0, cameraPos.get$y(), overlapWidthRight0, overlapHeightTop0);
        t1.drawImage$9(this.bgCanvas, srcX, 0, overlapWidthLeft0, overlapHeightBottom0, cameraPos.get$x(), overlapDestY0, overlapWidthLeft0, overlapHeightBottom0);
        t1.drawImage$9(this.bgCanvas, 0, 0, overlapWidthRight0, overlapHeightBottom0, overlapDestX0, overlapDestY0, overlapWidthRight0, overlapHeightBottom0);
      }
    }
    t1.closePath$0();
  } finally {
    t1.restore$0();
  }
}
};

$$.HudRenderSystem = {"":"PlayerStatusProcessingSystem;context2d?,player,status,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 processSystem$0: function() {
  var t1, t2, t3;
  t1 = this.context2d;
  t1.save$0();
  t1.transform$6(1, 0, 0, 1, 90, 12);
  try {
    t1.beginPath$0();
    t1.set$fillStyle("black");
    t1.fillRect$4(0, 0, 200, 15);
    t1.set$fillStyle("green");
    t2 = this.status;
    t3 = t2.get$health();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    t3 = 200 * t3;
    t2 = t2.get$maxHealth();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    t1.fillRect$4(0, 0, t3 / t2, 15);
    t1.closePath$0();
  } finally {
    t1.restore$0();
  }
  $.ImageCache_withImage("hud_dummy.png", new $.HudRenderSystem_processSystem_anon(this));
}
};

$$.MiniMapRenderSystem = {"":"EntitySystem;context2d?,transformMapper?,renderableMapper?,bodyMapper?,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3;
  t1 = $.Transform$hack();
  this.transformMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform);
  t2 = $.MiniMapRenderable$hack();
  this.renderableMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.MiniMapRenderable);
  t3 = $.CircularBody$hack();
  this.bodyMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.CircularBody);
},
 processEntities$1: function(entities) {
  var t1, t2;
  t1 = this.context2d;
  t1.save$0();
  t1.transform$6(0.05, 0, 0, 0.05, 710, 10);
  try {
    t1.set$fillStyle("black");
    t1.beginPath$0();
    t1.fillRect$4(0, 0, 1600, 1600);
    t1.closePath$0();
    t2 = entities;
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.MiniMapRenderSystem_processEntities_anon(this));
  } finally {
    t1.restore$0();
  }
},
 checkProcessing$0: function() {
  return true;
}
};

$$.SoundSystem = {"":"EntityProcessingSystem;audioManager,soundMapper,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1 = $.Sound$hack();
  this.soundMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Sound);
},
 processEntity$1: function(entity) {
  var sound = this.soundMapper.get$1(entity);
  this.audioManager.playClipFromSource$2(sound.get$source(), sound.get$clip());
  entity.removeComponent$1(sound);
  entity.changedInWorld$0();
}
};

$$.Transform = {"":"Component;_x,_y,angle=,rotationRate=",
 get$x: function() {
  return this._x;
},
 get$y: function() {
  return this._y;
},
 set$x: function(x) {
  var t1 = $.mod(x, 1600);
  this._x = t1;
  return t1;
},
 set$y: function(y) {
  var t1 = $.mod(y, 1600);
  this._y = t1;
  return t1;
}
};

$$.CameraPosition = {"":"Transform;_x,_y,angle,rotationRate"
};

$$.Velocity = {"":"Component;x=,y="
};

$$.Spatial = {"":"Component;resource=,isSprite?,width=,height=,x=,y=,scale?",
 Spatial$asSprite$6$scale: function(resource, x, y, width, height, scale) {
  this.isSprite = true;
},
 Spatial$2$scale: function(resource, scale) {
  this.isSprite = false;
}
};

$$.Background = {"":"Component;"
};

$$.Status = {"":"Component;health=,maxHealth=,maxVelocity,destroyed=",
 Status$2$maxHealth$maxVelocity: function(maxHealth, maxVelocity) {
  this.health = this.maxHealth;
}
};

$$.CircularBody = {"":"Component;radius?"
};

$$.Mass = {"":"Component;value="
};

$$.Cannon = {"":"Component;shoot!,cooldownTimer=,cooldownTime,bulletSpeed?,bulletMass?,bulletDamage?,amount=",
 get$canShoot: function() {
  if (this.shoot === true && $.leB(this.cooldownTimer, 0))
    return true;
  return false;
},
 resetCooldown$0: function() {
  this.cooldownTimer = this.cooldownTime;
}
};

$$.ExpirationTimer = {"":"Component;maxTime,timeLeft=",
 expireBy$1: function(delta) {
  this.timeLeft = $.sub(this.timeLeft, delta);
  if (this.get$expired() === true)
    this.timeLeft = 0;
},
 get$expired: function() {
  return $.le(this.timeLeft, 0);
},
 get$percentLeft: function() {
  return $.div(this.timeLeft, this.maxTime);
},
 ExpirationTimer$1: function(maxTime) {
  this.timeLeft = this.maxTime;
}
};

$$.MiniMapRenderable = {"":"Component;color?"
};

$$.Upgrade = {"":"Component;maxHealth=,bullets",
 applyToStatus$1: function(status$) {
  status$.set$maxHealth($.add(status$.get$maxHealth(), this.maxHealth));
  status$.set$health(status$.get$maxHealth());
},
 applyToCannon$1: function(cannon) {
  cannon.set$amount($.add(cannon.get$amount(), this.bullets));
}
};

$$.Damage = {"":"Component;value=,maxValue?",
 Damage$1: function(maxValue) {
  this.value = this.maxValue;
}
};

$$.SplitsOnDestruction = {"":"Component;parts?"
};

$$.DisappearsOnDestruction = {"":"Component;"
};

$$.Sound = {"":"Component;source?,clip?"
};

$$.OnScreenProcessingSystem = {"":"EntitySystem;transformMapper=",
 initialize$0: function() {
  var t1, t2, t3, t4;
  t1 = $.Transform$hack();
  this.set$transformMapper($.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform));
  t2 = $.CameraPosition$hack();
  this.cameraPositionMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.CameraPosition);
  t3 = this.world;
  t4 = $.TagManager$();
  this.tagManager = t3.getManager$1($.getInterceptor(t4).get$runtimeType(t4));
},
 processEntities$1: function(entities) {
  var camera, cameraPos, entitiesOnScreen;
  camera = this.tagManager.getEntity$1("CAMERA");
  cameraPos = this.cameraPositionMapper.get$1(camera);
  entitiesOnScreen = $.Bag$(16, $.Entity);
  entities.forEach$1(new $.OnScreenProcessingSystem_processEntities_anon(entitiesOnScreen, cameraPos, this));
  this.processEntitiesOnScreen$1(entitiesOnScreen);
},
 isWithtinXRange$2: function(pos, camPos) {
  var t1, distanceX;
  t1 = $.sub(camPos.get$x(), pos.get$x());
  distanceX = $.getInterceptor$JSNumber(t1).abs$0(t1);
  return $.ltB(distanceX, 850) || $.gtB(distanceX, 750);
},
 isWithtinYRange$2: function(pos, camPos) {
  var t1, distanceY;
  t1 = $.sub(camPos.get$y(), pos.get$y());
  distanceY = $.getInterceptor$JSNumber(t1).abs$0(t1);
  return $.ltB(distanceY, 450) || $.gtB(distanceY, 1150);
},
 checkProcessing$0: function() {
  return true;
}
};

$$.OnScreenEntityProcessingSystem = {"":"OnScreenProcessingSystem;",
 initialize$0: function() {
  $.OnScreenProcessingSystem.prototype.initialize$0.call(this);
},
 processEntitiesOnScreen$1: function(entities) {
  entities.forEach$1(new $.OnScreenEntityProcessingSystem_processEntitiesOnScreen_anon(this));
}
};

$$.MovementSystem = {"":"EntityProcessingSystem;positionMapper,velocityMapper,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2;
  t1 = $.Transform$hack();
  this.positionMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform);
  t2 = $.Velocity$hack();
  this.velocityMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Velocity);
},
 processEntity$1: function(entity) {
  var transform, vel;
  transform = this.positionMapper.get$1(entity);
  vel = this.velocityMapper.get$1(entity);
  transform.set$x($.add(transform.get$x(), $.mul(vel.get$x(), this.world.get$delta())));
  transform.set$y($.add(transform.get$y(), $.mul(vel.get$y(), this.world.get$delta())));
  transform.set$angle($.add(transform.get$angle(), transform.get$rotationRate()));
}
};

$$.CameraSystem = {"":"VoidEntitySystem;positionMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3, t4;
  t1 = $.Transform$hack();
  this.positionMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform);
  t2 = $.CameraPosition$hack();
  this.cameraPositionMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.CameraPosition);
  t3 = this.world;
  t4 = $.TagManager$();
  this.tagManager = t3.getManager$1($.getInterceptor(t4).get$runtimeType(t4));
},
 processSystem$0: function() {
  var player, camera, playerPos, cameraPos;
  player = this.tagManager.getEntity$1("PLAYER");
  camera = this.tagManager.getEntity$1("CAMERA");
  playerPos = this.positionMapper.get$1(player);
  cameraPos = this.cameraPositionMapper.get$1(camera);
  cameraPos.set$x($.sub(playerPos.get$x(), 400));
  cameraPos.set$y($.sub(playerPos.get$y(), 200));
}
};

$$.UpgradeCollectionSystem = {"":"OnScreenEntityProcessingSystem;bodyMapper?,upgradeMapper,status,transform,body,cannon,transformMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
 initialize$0: function() {
  var t1, t2, t3, cannonMapper, t4, statusMapper, t5, t6, player;
  $.OnScreenEntityProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.CircularBody$hack();
  this.bodyMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.CircularBody);
  t2 = $.Upgrade$hack();
  this.upgradeMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Upgrade);
  t3 = $.Cannon$hack();
  cannonMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Cannon);
  t4 = $.Status$hack();
  statusMapper = $.ComponentMapper$($.getInterceptor(t4).get$runtimeType(t4), this.world, $.Status);
  t5 = this.world;
  t6 = $.TagManager$();
  player = t5.getManager$1($.getInterceptor(t6).get$runtimeType(t6)).getEntity$1("PLAYER");
  this.status = statusMapper.get$1(player);
  this.transform = this.transformMapper.get$1(player);
  this.body = this.bodyMapper.get$1(player);
  this.cannon = cannonMapper.get$1(player);
},
 processEntityOnScreen$1: function(entity) {
  var upgradeTransform, upgradeBody, upgrade;
  upgradeTransform = this.transformMapper.get$1(entity);
  upgradeBody = this.bodyMapper.get$1(entity);
  if ($.Utils_doCirclesCollide(this.transform.get$x(), this.transform.get$y(), this.body.get$radius(), upgradeTransform.get$x(), upgradeTransform.get$y(), upgradeBody.get$radius()) === true) {
    upgrade = this.upgradeMapper.get$1(entity);
    upgrade.applyToStatus$1(this.status);
    upgrade.applyToCannon$1(this.cannon);
    entity.deleteFromWorld$0();
  }
},
 end$0: function() {
  this.world.processEntityChanges$0();
},
 checkProcessing$0: function() {
  return $.gt(this.status.get$health(), 0);
}
};

$$.CircularCollisionDetectionSystem = {"":"OnScreenProcessingSystem;transformMapper=,bodyMapper?,velocityMapper,massMapper,statusMapper,damageMapper,expirationMapper,lib4$OnScreenProcessingSystem$transformMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3, t4, t5, t6, t7;
  $.OnScreenProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.Transform$hack();
  this.transformMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform);
  t2 = $.CircularBody$hack();
  this.bodyMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.CircularBody);
  t3 = $.Velocity$hack();
  this.velocityMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Velocity);
  t4 = $.Mass$hack();
  this.massMapper = $.ComponentMapper$($.getInterceptor(t4).get$runtimeType(t4), this.world, $.Mass);
  t5 = $.Status$hack();
  this.statusMapper = $.ComponentMapper$($.getInterceptor(t5).get$runtimeType(t5), this.world, $.Status);
  t6 = $.Damage$hack();
  this.damageMapper = $.ComponentMapper$($.getInterceptor(t6).get$runtimeType(t6), this.world, $.Damage);
  t7 = $.ExpirationTimer$hack();
  this.expirationMapper = $.ComponentMapper$($.getInterceptor(t7).get$runtimeType(t7), this.world, $.ExpirationTimer);
},
 processEntitiesOnScreen$1: function(entities) {
  var i, e1, t1, c1, j, j0, e2, t2, c2, v1, v2, m1, m2, dx, dy, distance, radiusTotal, dvx, dvy, time, t3, t4, t5, t6, t7, t8, t9, t10, phi, v1i, v2i, ang1, ang2, v1xr, v1yr, v2xr, v2yr, p1, p2, mTotal, v1fxr, v2fxr, s1, s2, d1, d2, timer1, timer2;
  if ($.gtB(entities.get$size(), 1))
    for (i = 0; $.ltB(i, $.sub(entities.get$size(), 1)); i = j) {
      e1 = entities.operator$index$1(i);
      t1 = this.transformMapper.get$1(e1);
      c1 = this.bodyMapper.get$1(e1);
      for (j = i + 1, j0 = j; $.ltB(j0, entities.get$size()); ++j0) {
        e2 = entities.operator$index$1(j0);
        t2 = this.transformMapper.get$1(e2);
        c2 = this.bodyMapper.get$1(e2);
        if ($.Utils_doCirclesCollide(t1.get$x(), t1.get$y(), c1.get$radius(), t2.get$x(), t2.get$y(), c2.get$radius()) === true) {
          v1 = this.velocityMapper.get$1(e1);
          v2 = this.velocityMapper.get$1(e2);
          m1 = this.massMapper.get$1(e1);
          m2 = this.massMapper.get$1(e2);
          dx = $.sub(t2.get$x(), t1.get$x());
          dy = $.sub(t2.get$y(), t1.get$y());
          distance = $.sqrt($.add($.mul(dx, dx), $.mul(dy, dy)));
          radiusTotal = $.add(c1.get$radius(), c2.get$radius());
          if ($.gtB($.sub(radiusTotal, distance), 0)) {
            dvx = $.sub(v2.get$x(), v1.get$x());
            dvy = $.sub(v2.get$y(), v1.get$y());
            if (typeof radiusTotal !== 'number')
              throw $.iae(radiusTotal);
            time = (distance - radiusTotal) / $.sqrt($.add($.mul(dvx, dvx), $.mul(dvy, dvy)));
            t3 = t1.get$x();
            t4 = v1.get$x();
            if (typeof t4 !== 'number')
              throw $.iae(t4);
            t1.set$x($.add(t3, time * t4));
            t5 = t1.get$y();
            t6 = v1.get$y();
            if (typeof t6 !== 'number')
              throw $.iae(t6);
            t1.set$y($.add(t5, time * t6));
            t7 = t2.get$x();
            t8 = v2.get$x();
            if (typeof t8 !== 'number')
              throw $.iae(t8);
            t2.set$x($.add(t7, time * t8));
            t9 = t2.get$y();
            t10 = v2.get$y();
            if (typeof t10 !== 'number')
              throw $.iae(t10);
            t2.set$y($.add(t9, time * t10));
            dx = $.sub(t2.get$x(), t1.get$x());
            dy = $.sub(t2.get$y(), t1.get$y());
          }
          phi = $.atan2(dy, dx);
          v1i = $.sqrt($.add($.mul(v1.get$x(), v1.get$x()), $.mul(v1.get$y(), v1.get$y())));
          v2i = $.sqrt($.add($.mul(v2.get$x(), v2.get$x()), $.mul(v2.get$y(), v2.get$y())));
          ang1 = $.atan2(v1.get$y(), v1.get$x());
          ang2 = $.atan2(v2.get$y(), v2.get$x());
          t2 = ang1 - phi;
          v1xr = v1i * $.cos(t2);
          v1yr = v1i * $.sin(t2);
          t3 = ang2 - phi;
          v2xr = v2i * $.cos(t3);
          v2yr = v2i * $.sin(t3);
          t4 = m1.get$value();
          if (typeof t4 !== 'number')
            throw $.iae(t4);
          p1 = v1xr * t4;
          t4 = m2.get$value();
          if (typeof t4 !== 'number')
            throw $.iae(t4);
          p2 = v2xr * t4;
          mTotal = $.add(m1.get$value(), m2.get$value());
          t4 = p1 + 2 * p2;
          t5 = $.mul(m2.get$value(), v1xr);
          if (typeof t5 !== 'number')
            throw $.iae(t5);
          t5 = t4 - t5;
          if (typeof mTotal !== 'number')
            throw $.iae(mTotal);
          v1fxr = t5 / mTotal;
          t5 = p2 + 2 * p1;
          t4 = $.mul(m1.get$value(), v2xr);
          if (typeof t4 !== 'number')
            throw $.iae(t4);
          v2fxr = (t5 - t4) / mTotal;
          t6 = $.cos(phi) * v1fxr;
          t7 = phi + 1.5707963267948966;
          v1.set$x(t6 + $.cos(t7) * v1yr);
          v1.set$y($.sin(phi) * v1fxr + $.sin(t7) * v1yr);
          v2.set$x($.cos(phi) * v2fxr + $.cos(t7) * v2yr);
          v2.set$y($.sin(phi) * v2fxr + $.sin(t7) * v2yr);
          s1 = this.statusMapper.getSafe$1(e1);
          s2 = this.statusMapper.getSafe$1(e2);
          d1 = this.damageMapper.getSafe$1(e1);
          d2 = this.damageMapper.getSafe$1(e2);
          if (!(null == s1)) {
            s1.set$health($.sub(s1.get$health(), $.div($.add($.CTC6.abs$0(p2), $.CTC6.abs$0(p1)), 5)));
            if (!(null == d2))
              s1.set$health($.sub(s1.get$health(), d2.get$value()));
          }
          if (!(null == s2)) {
            s2.set$health($.sub(s2.get$health(), $.div($.add($.CTC6.abs$0(p2), $.CTC6.abs$0(p1)), 5)));
            if (!(null == d1))
              s2.set$health($.sub(s2.get$health(), d1.get$value()));
          }
          timer1 = this.expirationMapper.getSafe$1(e1);
          timer2 = this.expirationMapper.getSafe$1(e2);
          if (!(null == timer1))
            timer1.set$timeLeft($.mul(timer1.get$timeLeft(), 0.8));
          if (!(null == timer2))
            timer2.set$timeLeft($.mul(timer2.get$timeLeft(), 0.8));
        }
      }
    }
}
};

$$.BulletSpawningSystem = {"":"EntityProcessingSystem;transformMapper?,cannonMapper,velocityMapper,massMapper,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3, t4;
  t1 = $.Transform$hack();
  this.transformMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Transform);
  t2 = $.Velocity$hack();
  this.velocityMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Velocity);
  t3 = $.Mass$hack();
  this.massMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Mass);
  t4 = $.Cannon$hack();
  this.cannonMapper = $.ComponentMapper$($.getInterceptor(t4).get$runtimeType(t4), this.world, $.Cannon);
},
 processEntity$1: function(entity) {
  var cannon = this.cannonMapper.get$1(entity);
  if (cannon.get$canShoot() === true)
    this.fireBullet$2(entity, cannon);
  else if ($.gtB(cannon.get$cooldownTimer(), 0))
    cannon.set$cooldownTimer($.sub(cannon.get$cooldownTimer(), this.world.get$delta()));
},
 fireBullet$2: function(shooter, cannon) {
  var transform, shooterVel, shooterMass, cosx, siny, i, t1, anglechange, t2, bullet;
  transform = this.transformMapper.get$1(shooter);
  shooterVel = this.velocityMapper.get$1(shooter);
  shooterMass = this.massMapper.get$1(shooter);
  cannon.resetCooldown$0();
  cosx = $.TrigUtil_cos(transform.get$angle());
  if (typeof cosx !== 'number')
    return this.fireBullet$2$bailout(1, cannon, shooterMass, transform, cosx, shooterVel);
  siny = $.TrigUtil_sin(transform.get$angle());
  if (typeof siny !== 'number')
    return this.fireBullet$2$bailout(2, siny, cannon, transform, shooterVel, shooterMass, cosx);
  for (i = 0; $.ltB(i, cannon.get$amount()); ++i) {
    t1 = $.eqB(cannon.get$amount(), 1);
    anglechange = transform.get$angle();
    if (t1)
      ;
    else {
      t1 = $.add(anglechange, 0.7853981633974483);
      t2 = $.sub(cannon.get$amount(), 1);
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      anglechange = $.sub(t1, 3.141592653589793 / (2 * t2) * i);
    }
    bullet = this.world.createEntity$0();
    bullet.addComponent$1($.Transform$($.add(transform.get$x(), $.cos(anglechange) * 26), $.add(transform.get$y(), $.sin(anglechange) * 26), 0, 0));
    bullet.addComponent$1($.Velocity$($.add(shooterVel.get$x(), $.mul(cannon.get$bulletSpeed(), cosx)), $.add(shooterVel.get$y(), $.mul(cannon.get$bulletSpeed(), siny))));
    bullet.addComponent$1($.CircularBody$(2));
    bullet.addComponent$1($.Mass$(cannon.get$bulletMass()));
    bullet.addComponent$1($.Spatial$("bullet_dummy.png", 1));
    bullet.addComponent$1($.ExpirationTimer$(2500));
    bullet.addComponent$1($.Damage$(cannon.get$bulletDamage()));
    bullet.addComponent$1($.Sound$("non-positional", "shoot_sound"));
    bullet.addToWorld$0();
  }
  t1 = new $.BulletSpawningSystem_fireBullet_getVelocityAfterRecoil(cannon, shooterMass);
  shooterVel.set$x(t1.call$2(shooterVel.get$x(), cosx));
  shooterVel.set$y(t1.call$2(shooterVel.get$y(), siny));
},
 fireBullet$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      shooterVel = env4;
      cosx = env3;
      transform = env2;
      shooterMass = env1;
      cannon = env0;
      break;
    case 2:
      cosx = env5;
      shooterMass = env4;
      shooterVel = env3;
      transform = env2;
      cannon = env1;
      siny = env0;
      break;
  }
  switch (state0) {
    case 0:
      transform = this.transformMapper.get$1(shooter);
      shooterVel = this.velocityMapper.get$1(shooter);
      shooterMass = this.massMapper.get$1(shooter);
      cannon.resetCooldown$0();
      cosx = $.TrigUtil_cos(transform.get$angle());
    case 1:
      state0 = 0;
      siny = $.TrigUtil_sin(transform.get$angle());
    case 2:
      var transform, shooterVel, shooterMass, cosx, cannon, siny, i, t1, anglechange, t2, bullet;
      state0 = 0;
      for (i = 0; $.ltB(i, cannon.get$amount()); ++i) {
        t1 = $.eqB(cannon.get$amount(), 1);
        anglechange = transform.get$angle();
        if (t1)
          ;
        else {
          t1 = $.add(anglechange, 0.7853981633974483);
          t2 = $.sub(cannon.get$amount(), 1);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          anglechange = $.sub(t1, 3.141592653589793 / (2 * t2) * i);
        }
        bullet = this.world.createEntity$0();
        bullet.addComponent$1($.Transform$($.add(transform.get$x(), $.cos(anglechange) * 26), $.add(transform.get$y(), $.sin(anglechange) * 26), 0, 0));
        bullet.addComponent$1($.Velocity$($.add(shooterVel.get$x(), $.mul(cannon.get$bulletSpeed(), cosx)), $.add(shooterVel.get$y(), $.mul(cannon.get$bulletSpeed(), siny))));
        bullet.addComponent$1($.CircularBody$(2));
        bullet.addComponent$1($.Mass$(cannon.get$bulletMass()));
        bullet.addComponent$1($.Spatial$("bullet_dummy.png", 1));
        bullet.addComponent$1($.ExpirationTimer$(2500));
        bullet.addComponent$1($.Damage$(cannon.get$bulletDamage()));
        bullet.addComponent$1($.Sound$("non-positional", "shoot_sound"));
        bullet.addToWorld$0();
      }
      t1 = new $.BulletSpawningSystem_fireBullet_getVelocityAfterRecoil(cannon, shooterMass);
      shooterVel.set$x(t1.call$2(shooterVel.get$x(), cosx));
      shooterVel.set$y(t1.call$2(shooterVel.get$y(), siny));
  }
}
};

$$.ExpirationSystem = {"":"EntityProcessingSystem;timerMapper,damageMapper,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2;
  t1 = $.ExpirationTimer$hack();
  this.timerMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.ExpirationTimer);
  t2 = $.Damage$hack();
  this.damageMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Damage);
},
 processEntity$1: function(entity) {
  var timer, damage;
  timer = this.timerMapper.get$1(entity);
  if (timer.get$expired() === true)
    entity.deleteFromWorld$0();
  else {
    timer.expireBy$1(this.world.get$delta());
    damage = this.damageMapper.getSafe$1(entity);
    if (!(null == damage))
      damage.set$value($.mul(damage.get$maxValue(), timer.get$percentLeft()));
  }
}
};

$$.PlayerStatusProcessingSystem = {"":"VoidEntitySystem;",
 initialize$0: function() {
  var t1, statusMapper, t2, t3;
  t1 = $.Status$hack();
  statusMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Status);
  t2 = this.world;
  t3 = $.TagManager$();
  this.player = t2.getManager$1($.getInterceptor(t3).get$runtimeType(t3)).getEntity$1("PLAYER");
  this.status = statusMapper.get$1(this.player);
}
};

$$.SplittingDestructionSystem = {"":"OnScreenEntityProcessingSystem;statusMapper,splitterMapper,bodyMapper?,velocityMapper,massMapper,spatialMapper,transformMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  var t1, t2, t3, t4, t5, t6;
  $.OnScreenEntityProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.Status$hack();
  this.statusMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Status);
  t2 = $.SplitsOnDestruction$hack();
  this.splitterMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.SplitsOnDestruction);
  t3 = $.CircularBody$hack();
  this.bodyMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.CircularBody);
  t4 = $.Velocity$hack();
  this.velocityMapper = $.ComponentMapper$($.getInterceptor(t4).get$runtimeType(t4), this.world, $.Velocity);
  t5 = $.Mass$hack();
  this.massMapper = $.ComponentMapper$($.getInterceptor(t5).get$runtimeType(t5), this.world, $.Mass);
  t6 = $.Spatial$hack();
  this.spatialMapper = $.ComponentMapper$($.getInterceptor(t6).get$runtimeType(t6), this.world, $.Spatial);
},
 processEntityOnScreen$1: function(entity) {
  var status$, transform, splitter, mass, velocity, body, spatial, t1, t2, anglePerPart, sqrtparts, radius, t3, spread, i, angle, asteroid, t4, t5, changeOfVelocity, t6;
  status$ = this.statusMapper.get$1(entity);
  if ($.leB(status$.get$health(), 0)) {
    transform = this.transformMapper.get$1(entity);
    splitter = this.splitterMapper.get$1(entity);
    mass = this.massMapper.get$1(entity);
    velocity = this.velocityMapper.get$1(entity);
    body = this.bodyMapper.get$1(entity);
    spatial = this.spatialMapper.get$1(entity);
    t1 = body.get$radius();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t2 = splitter.get$parts();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    anglePerPart = 6.283185307179586 / t2;
    sqrtparts = $.sqrt(t2);
    radius = $.div(body.get$radius(), sqrtparts);
    if (typeof radius !== 'number')
      return this.processEntityOnScreen$1$bailout(1, entity, mass, velocity, status$, anglePerPart, body, sqrtparts, spatial, radius, transform, splitter);
    t3 = $.mul($.sub(splitter.get$parts(), 1), anglePerPart);
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    spread = 2.0943951023931953 / t3;
    for (t1 = radius > 10, i = 0; $.ltB(i, splitter.get$parts()); ++i) {
      angle = i * anglePerPart;
      asteroid = this.world.createEntity$0();
      t2 = $.add(transform.get$x(), $.mul(body.get$radius(), $.sin(angle)));
      t3 = $.add(transform.get$y(), $.mul(body.get$radius(), $.cos(angle)));
      t4 = $.mul($.get$random().nextDouble$0(), 6.283185307179586);
      t5 = $.get$random().nextDouble$0();
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      asteroid.addComponent$1($.Transform$(t2, t3, t4, 0.15 + 0.2 * t5));
      changeOfVelocity = $.sin(0.5235987755982988 + angle * spread);
      asteroid.addComponent$1($.Velocity$($.mul(velocity.get$x(), changeOfVelocity), $.mul(velocity.get$y(), changeOfVelocity)));
      t6 = $.get$random().nextDouble$0();
      if (typeof t6 !== 'number')
        throw $.iae(t6);
      asteroid.addComponent$1($.Spatial$fromSpatial(spatial, $.div(spatial.get$scale(), sqrtparts)));
      asteroid.addComponent$1($.Mass$($.div(mass.get$value(), splitter.get$parts())));
      asteroid.addComponent$1($.MiniMapRenderable$("#333"));
      asteroid.addComponent$1($.Status$($.div(status$.get$maxHealth(), sqrtparts), 20));
      asteroid.addComponent$1($.CircularBody$(radius));
      if (t1) {
        t2 = $.get$random().nextDouble$0();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        t3 = $.CTC1.round$0(2 + 4 * t2);
        asteroid.addComponent$1($.SplitsOnDestruction$($.getInterceptor$JSNumber(t3).toInt$0(t3)));
      } else
        asteroid.addComponent$1($.DisappearsOnDestruction$());
      asteroid.addToWorld$0();
    }
    entity.deleteFromWorld$0();
  }
},
 processEntityOnScreen$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      splitter = env10;
      transform = env9;
      radius = env8;
      spatial = env7;
      sqrtparts = env6;
      body = env5;
      anglePerPart = env4;
      status$ = env3;
      velocity = env2;
      mass = env1;
      entity = env0;
      break;
  }
  switch (state0) {
    case 0:
      status$ = this.statusMapper.get$1(entity);
    case 1:
      var status$, transform, splitter, mass, velocity, body, spatial, t1, t2, anglePerPart, sqrtparts, radius, entity, t3, spread, i, angle, asteroid, t4, changeOfVelocity, t5;
      if (state0 === 1 || state0 === 0 && $.leB(status$.get$health(), 0))
        switch (state0) {
          case 0:
            transform = this.transformMapper.get$1(entity);
            splitter = this.splitterMapper.get$1(entity);
            mass = this.massMapper.get$1(entity);
            velocity = this.velocityMapper.get$1(entity);
            body = this.bodyMapper.get$1(entity);
            spatial = this.spatialMapper.get$1(entity);
            t1 = body.get$radius();
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t2 = splitter.get$parts();
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            anglePerPart = 6.283185307179586 / t2;
            sqrtparts = $.sqrt(t2);
            radius = $.div(body.get$radius(), sqrtparts);
          case 1:
            state0 = 0;
            t3 = $.mul($.sub(splitter.get$parts(), 1), anglePerPart);
            if (typeof t3 !== 'number')
              throw $.iae(t3);
            spread = 2.0943951023931953 / t3;
            for (i = 0; $.ltB(i, splitter.get$parts()); ++i) {
              angle = i * anglePerPart;
              asteroid = this.world.createEntity$0();
              t1 = $.add(transform.get$x(), $.mul(body.get$radius(), $.sin(angle)));
              t2 = $.add(transform.get$y(), $.mul(body.get$radius(), $.cos(angle)));
              t3 = $.mul($.get$random().nextDouble$0(), 6.283185307179586);
              t4 = $.get$random().nextDouble$0();
              if (typeof t4 !== 'number')
                throw $.iae(t4);
              asteroid.addComponent$1($.Transform$(t1, t2, t3, 0.15 + 0.2 * t4));
              changeOfVelocity = $.sin(0.5235987755982988 + angle * spread);
              asteroid.addComponent$1($.Velocity$($.mul(velocity.get$x(), changeOfVelocity), $.mul(velocity.get$y(), changeOfVelocity)));
              t5 = $.get$random().nextDouble$0();
              if (typeof t5 !== 'number')
                throw $.iae(t5);
              asteroid.addComponent$1($.Spatial$fromSpatial(spatial, $.div(spatial.get$scale(), sqrtparts)));
              asteroid.addComponent$1($.Mass$($.div(mass.get$value(), splitter.get$parts())));
              asteroid.addComponent$1($.MiniMapRenderable$("#333"));
              asteroid.addComponent$1($.Status$($.div(status$.get$maxHealth(), sqrtparts), 20));
              asteroid.addComponent$1($.CircularBody$(radius));
              if ($.gtB(radius, 10)) {
                t1 = $.get$random().nextDouble$0();
                if (typeof t1 !== 'number')
                  throw $.iae(t1);
                t2 = $.CTC1.round$0(2 + 4 * t1);
                asteroid.addComponent$1($.SplitsOnDestruction$($.getInterceptor$JSNumber(t2).toInt$0(t2)));
              } else
                asteroid.addComponent$1($.DisappearsOnDestruction$());
              asteroid.addToWorld$0();
            }
            entity.deleteFromWorld$0();
        }
  }
}
};

$$.DisapperearingDestructionSystem = {"":"OnScreenEntityProcessingSystem;statusMapper,splitterMapper,transformMapper,cameraPositionMapper,tagManager,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 initialize$0: function() {
  $.OnScreenEntityProcessingSystem.prototype.initialize$0.call(this);
  var t1 = $.Status$hack();
  this.statusMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Status);
},
 processEntityOnScreen$1: function(entity) {
  if ($.leB(this.statusMapper.get$1(entity).get$health(), 0))
    entity.deleteFromWorld$0();
}
};

$$.PlayerDestructionSystem = {"":"PlayerStatusProcessingSystem;cannon,transform,spatial,player,status,_systemBit,world,_actives,_all,_excluded,_one,_lib1_dummy,_passive",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
 initialize$0: function() {
  var t1, cannonMapper, t2, transformMapper, t3, spatialMapper;
  $.PlayerStatusProcessingSystem.prototype.initialize$0.call(this);
  t1 = $.Cannon$hack();
  cannonMapper = $.ComponentMapper$($.getInterceptor(t1).get$runtimeType(t1), this.world, $.Cannon);
  t2 = $.Transform$hack();
  transformMapper = $.ComponentMapper$($.getInterceptor(t2).get$runtimeType(t2), this.world, $.Transform);
  t3 = $.Spatial$hack();
  spatialMapper = $.ComponentMapper$($.getInterceptor(t3).get$runtimeType(t3), this.world, $.Spatial);
  this.cannon = cannonMapper.get$1(this.player);
  this.transform = transformMapper.get$1(this.player);
  this.spatial = spatialMapper.get$1(this.player);
},
 processSystem$0: function() {
  var t1 = this.status;
  if (t1.get$destroyed() !== true && $.ltB(t1.get$health(), 0)) {
    this.cannon.set$shoot(false);
    this.status.set$destroyed(true);
    this.spatial.set$resource("spaceship.png");
    this.transform.set$rotationRate(0.1);
  }
},
 checkProcessing$0: function() {
  return this.status.get$destroyed() !== true;
}
};

$$.Bag = {"":"Object;_data,_size",
 operator$index$1: function(index) {
  var t1 = this._data;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$size: function() {
  return this._size;
},
 isEmpty$0: function() {
  return $.eq(this._size, 0);
},
 get$isEmpty: function() { return new $.BoundClosure(this, 'isEmpty$0'); },
 forEach$1: function(f) {
  var i, t1;
  for (i = 0; $.ltB(i, this._size); ++i) {
    t1 = this._data;
    if (i >= t1.length)
      throw $.ioore(i);
    f.call$1(t1[i]);
  }
},
 removeLast$0: function() {
  var t1, t2, o;
  if ($.gtB(this.get$size(), 0)) {
    t1 = this._data;
    t2 = $.sub(this._size, 1);
    this._size = t2;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    o = t1[t2];
    t2 = this._data;
    t1 = this._size;
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t2.length)
      throw $.ioore(t1);
    t2[t1] = null;
    return o;
  }
  return;
},
 remove$1: function(o) {
  var i, t1, t2, t3;
  for (i = 0; $.ltB(i, this._size); ++i) {
    t1 = this._data;
    if (i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(o, t1[i])) {
      t1 = this._data;
      t2 = $.sub(this._size, 1);
      this._size = t2;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      t3 = t1.length;
      if (t2 < 0 || t2 >= t3)
        throw $.ioore(t2);
      t2 = t1[t2];
      if (i >= t3)
        throw $.ioore(i);
      t1[i] = t2;
      t2 = this._data;
      t1 = this._size;
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      t2[t1] = null;
      return true;
    }
  }
  return false;
},
 contains$1: function(o) {
  var i, t1;
  for (i = 0; $.gtB(this._size, i); ++i) {
    t1 = this._data;
    if (i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(o, t1[i]))
      return true;
  }
  return false;
},
 get$capacity: function() {
  return this._data.length;
},
 add$1: function(o) {
  var t1, t3, t2;
  t1 = this._size;
  if (typeof t1 !== 'number')
    return this.add$1$bailout0(1, o, t1);
  t3 = this._data.length;
  if (t1 === t3)
    this._growTo$1($.CTC6.toInt$0(t3 * 3 / 2 + 1));
  t1 = this._data;
  t2 = this._size;
  if (typeof t2 !== 'number')
    return this.add$1$bailout0(2, o, t1, t2);
  this._size = t2 + 1;
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  t1[t2] = o;
},
 add$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      o = env0;
      break;
    case 2:
      t2 = env2;
      t1 = env1;
      o = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._size;
    case 1:
      state0 = 0;
      if ($.eqB(t1, this._data.length))
        this._growTo$1($.CTC6.toInt$0(this._data.length * 3 / 2 + 1));
      t1 = this._data;
      t2 = this._size;
    case 2:
      var t1, o, t2;
      state0 = 0;
      this._size = $.add(t2, 1);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1[t2] = o;
  }
},
 operator$indexSet$2: function(index, o) {
  var t1;
  if ($.geB(index, this._data.length)) {
    this._growTo$1($.mul(index, 2));
    this._size = $.add(index, 1);
  } else if ($.geB(index, this._size))
    this._size = $.add(index, 1);
  t1 = this._data;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1[index] = o;
},
 _growTo$1: function(newCapacity) {
  var oldData, t1;
  oldData = this._data;
  t1 = $.List_List(newCapacity);
  $.setRuntimeTypeInfo(t1, []);
  this._data = t1;
  $.Arrays_copy(oldData, 0, this._data, 0, oldData.length);
},
 clear$0: function() {
  var i, t1;
  for (i = 0; $.ltB(i, this._size); ++i) {
    t1 = this._data;
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = null;
  }
  this._size = 0;
},
 toString$0: function() {
  return $.Collections_collectionToString(this._data);
},
 isIndexWithinBounds$1: function(index) {
  return $.lt(index, this.get$capacity());
},
 Bag$1$capacity: function(capacity) {
  var t1 = $.List_List(capacity);
  $.setRuntimeTypeInfo(t1, []);
  this._data = t1;
}
};

$$.Component = {"":"Object;"
};

$$.ComponentMapper = {"":"Object;_lib1_type,_components",
 get$1: function(e) {
  var t1, t3;
  t1 = this._components;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$1$bailout(1, e, t1);
  t3 = e.get$id();
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 get$1$bailout: function(state0, e, t1) {
  return $.index(t1, e.get$id());
},
 getSafe$1: function(e) {
  var t1, t3;
  if (this._components.isIndexWithinBounds$1(e.get$id()) === true) {
    t1 = this._components;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.getSafe$1$bailout(1, e, t1);
    t3 = e.get$id();
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  }
  return;
},
 getSafe$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var t1, e;
      if (state0 === 1 || state0 === 0 && this._components.isIndexWithinBounds$1(e.get$id()) === true)
        switch (state0) {
          case 0:
            t1 = this._components;
          case 1:
            state0 = 0;
            return $.index(t1, e.get$id());
        }
      return;
  }
},
 ComponentMapper$2: function(componentType, world) {
  this._lib1_type = $.ComponentTypeManager_getTypeFor(componentType);
  this._components = world.get$componentManager().getComponentsByType$1(this._lib1_type);
}
};

$$.ComponentManager = {"":"Manager;_componentsByType,_deleted,_world",
 initialize$0: function() {
},
 _removeComponentsOfEntity$1: function(e) {
  this._forComponentsOfEntity$2(e, new $.ComponentManager__removeComponentsOfEntity_anon(e));
  e.set$_typeBits(0);
},
 _addComponent$3: function(e, type, component) {
  var index, t1, components;
  index = type.get$id();
  t1 = this._componentsByType;
  components = $.ltB(index, t1.get$size()) ? t1.operator$index$1(index) : null;
  if (components == null) {
    components = $.Bag$(16, '$.Component');
    t1.operator$indexSet$2(index, components);
  }
  $.indexSet(components, e.id, component);
  e._addTypeBit$1(type.get$bit());
},
 _removeComponent$2: function(e, type) {
  if (!$.eqB($.and(e._typeBits, type.get$bit()), 0)) {
    $.indexSet(this._componentsByType.operator$index$1(type.get$id()), e.id, null);
    e._removeTypeBit$1(type.get$bit());
  }
},
 getComponentsByType$1: function(type) {
  var index, t1, components;
  index = type.get$id();
  t1 = this._componentsByType;
  components = t1.operator$index$1(index);
  if (components == null) {
    components = $.Bag$(16, '$.Component');
    t1.operator$indexSet$2(index, components);
  }
  return components;
},
 _forComponentsOfEntity$2: function(e, f) {
  var componentBits, t1, index;
  componentBits = e.get$_typeBits();
  if (componentBits !== (componentBits | 0))
    return this._forComponentsOfEntity$2$bailout(1, f, componentBits);
  for (t1 = this._componentsByType, index = 0; componentBits > 0;) {
    if ((componentBits & 1) === 1)
      f.call$1(t1.operator$index$1(index));
    ++index;
    componentBits = $.shr(componentBits, 1);
  }
},
 _forComponentsOfEntity$2$bailout: function(state0, f, componentBits) {
  var t1, index;
  for (t1 = this._componentsByType, index = 0; $.gtB(componentBits, 0);) {
    if ($.eqB($.and(componentBits, 1), 1))
      f.call$1(t1.operator$index$1(index));
    ++index;
    componentBits = $.shr(componentBits, 1);
  }
},
 deleted$1: function(e) {
  this._deleted.add$1(e);
},
 clean$0: function() {
  this._deleted.forEach$1(new $.ComponentManager_clean_anon(this));
  this._deleted.clear$0();
}
};

$$.ComponentType = {"":"Object;_bit,_id",
 _init$0: function() {
  var t1, t2;
  t1 = $.ComponentType__nextBit;
  this._bit = t1;
  $.ComponentType__nextBit = $.shl(t1, 1);
  t2 = $.ComponentType__nextId;
  $.ComponentType__nextId = $.add(t2, 1);
  this._id = t2;
},
 get$bit: function() {
  return this._bit;
},
 get$id: function() {
  return this._id;
},
 ComponentType$0: function() {
  this._init$0();
}
};

$$.Aspect = {"":"Object;_all,_excluded,_one",
 allOf$2: function(requiredComponentType, componentTypes) {
  this._all = this._updateBitMask$3(this._all, requiredComponentType, componentTypes);
  return this;
},
 allOf$1: function(requiredComponentType) {
  return this.allOf$2(requiredComponentType, null);
},
 exclude$2: function(requiredComponentType, componentTypes) {
  this._excluded = this._updateBitMask$3(this._excluded, requiredComponentType, componentTypes);
  return this;
},
 exclude$1: function(requiredComponentType) {
  return this.exclude$2(requiredComponentType, null);
},
 get$all: function() {
  return this._all;
},
 get$excluded: function() {
  return this._excluded;
},
 get$one: function() {
  return this._one;
},
 _updateBitMask$3: function(mask, requiredComponentType, componentTypes) {
  var t1 = {};
  t1.mask_1 = mask;
  t1.mask_1 = $.or(t1.mask_1, $.ComponentTypeManager_getTypeFor(requiredComponentType).get$bit());
  if (!(null == componentTypes))
    $.getInterceptor$JSArray(componentTypes).forEach$1(componentTypes, new $.Aspect__updateBitMask_anon(t1));
  return t1.mask_1;
}
};

$$.Entity = {"":"Object;id?,_uniqueId,_typeBits=,_systemBits?,_world!,_entityManager,_componentManager",
 _addTypeBit$1: function(bit) {
  this._typeBits = $.or(this._typeBits, bit);
},
 _removeTypeBit$1: function(bit) {
  this._typeBits = $.and(this._typeBits, $.not(bit));
},
 _addSystemBit$1: function(bit) {
  var t1 = this._systemBits;
  if (typeof bit !== 'number')
    throw $.iae(bit);
  this._systemBits = (t1 | bit) >>> 0;
},
 _removeSystemBit$1: function(bit) {
  var t1, t2;
  t1 = this._systemBits;
  t2 = $.not(bit);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  this._systemBits = (t1 & t2) >>> 0;
},
 toString$0: function() {
  return "Entity[" + $.S(this.id) + "]";
},
 addComponent$1: function(component) {
  this._componentManager._addComponent$3(this, $.ComponentTypeManager_getTypeFor($.getInterceptor(component).get$runtimeType(component)), component);
},
 removeComponent$1: function(component) {
  this._componentManager._removeComponent$2(this, $.ComponentTypeManager_getTypeFor($.getInterceptor(component).get$runtimeType(component)));
},
 addToWorld$0: function() {
  this._world.addEntity$1(this);
},
 deleteFromWorld$0: function() {
  this._world.deleteEntity$1(this);
},
 changedInWorld$0: function() {
  this._world.changedEntity$1(this);
},
 Entity$2: function(_world, id) {
  this._entityManager = this._world.get$entityManager();
  this._componentManager = this._world.get$componentManager();
}
};

$$.EntityManager = {"":"Manager;_entities,_disabled,_active,_added,_created,_deleted,_identifierPool,_world",
 initialize$0: function() {
},
 _createEntityInstance$0: function() {
  var e = $.Entity$(this._world, this._identifierPool.checkOut$0());
  this._created = this._created + 1;
  return e;
},
 added$1: function(e) {
  this._active = this._active + 1;
  this._added = this._added + 1;
  this._entities.operator$indexSet$2(e.get$id(), e);
},
 enabled$1: function(e) {
  this._disabled.operator$indexSet$2(e.get$id(), false);
},
 disabled$1: function(e) {
  this._disabled.operator$indexSet$2(e.get$id(), true);
},
 deleted$1: function(e) {
  this._entities.operator$indexSet$2(e.get$id(), null);
  this._disabled.operator$indexSet$2(e.get$id(), false);
  this._identifierPool.checkIn$1(e.get$id());
  this._active = this._active - 1;
  this._deleted = this._deleted + 1;
},
 _getEntity$1: function(entityId) {
  return this._entities.operator$index$1(entityId);
},
 get$activeEntityCount: function() {
  return this._active;
}
};

$$._IdentifierPool = {"":"Object;_ids,_nextAvailableId",
 checkOut$0: function() {
  var t1 = this._ids;
  if ($.gtB(t1.get$size(), 0))
    return t1.removeLast$0();
  t1 = this._nextAvailableId;
  this._nextAvailableId = t1 + 1;
  return t1;
},
 checkIn$1: function(id) {
  this._ids.add$1(id);
}
};

$$.EntitySystem = {"":"Object;world!,_passive!",
 get$passive: function() {
  return this._passive;
},
 begin$0: function() {
},
 process$0: function() {
  if (this.checkProcessing$0() === true) {
    this.begin$0();
    this.processEntities$1(this._actives);
    this.end$0();
  }
},
 end$0: function() {
},
 initialize$0: function() {
},
 inserted$1: function(entity) {
},
 removed$1: function(entity) {
},
 _check$1: function(e) {
  var contains, interest, t1;
  if (this._lib1_dummy === true)
    return;
  contains = this._contains$1(e);
  interest = $.eq($.and(this._all, e.get$_typeBits()), this._all);
  t1 = this._one;
  if ($.gtB(t1, 0) && interest === true)
    interest = $.gt($.and(t1, e.get$_typeBits()), 0);
  if ($.gtB(this._excluded, 0) && interest === true)
    interest = $.eq($.and(this._excluded, e.get$_typeBits()), 0);
  t1 = interest === true;
  if (t1 && contains !== true)
    this._insertToSystem$1(e);
  else if (!t1 && contains === true)
    this._removeFromSystem$1(e);
},
 _contains$1: function(e) {
  return $.eq($.and(this._systemBit, e.get$_systemBits()), this._systemBit);
},
 _insertToSystem$1: function(e) {
  this._actives.add$1(e);
  e._addSystemBit$1(this._systemBit);
  this.inserted$1(e);
},
 _removeFromSystem$1: function(e) {
  this._actives.remove$1(e);
  e._removeSystemBit$1(this._systemBit);
  this.removed$1(e);
},
 added$1: function(e) {
  this._check$1(e);
},
 changed$1: function(e) {
  this._check$1(e);
},
 enabled$1: function(e) {
  this._check$1(e);
},
 deleted$1: function(e) {
  if (this._contains$1(e) === true)
    this._removeFromSystem$1(e);
},
 disabled$1: function(e) {
  if (this._contains$1(e) === true)
    this._removeFromSystem$1(e);
},
 EntitySystem$1: function(aspect) {
  this._lib1_dummy = $.eqB(this._all, 0) && $.eqB(this._one, 0);
  this._systemBit = $._SystemBitManager__getBitFor(this.get$runtimeType());
}
};

$$.EntityProcessingSystem = {"":"EntitySystem;",
 processEntities$1: function(entities) {
  entities.forEach$1(new $.EntityProcessingSystem_processEntities_anon(this));
},
 checkProcessing$0: function() {
  return true;
}
};

$$.VoidEntitySystem = {"":"EntitySystem;",
 processEntities$1: function(entities) {
  this.processSystem$0();
},
 checkProcessing$0: function() {
  return true;
}
};

$$.Manager = {"":"Object;_world!",
 added$1: function(e) {
},
 changed$1: function(e) {
},
 deleted$1: function(e) {
},
 disabled$1: function(e) {
},
 enabled$1: function(e) {
}
};

$$.GroupManager = {"":"Manager;_entitiesByGroup?,_groupsByEntity,_world",
 initialize$0: function() {
},
 add$2: function(e, group) {
  var t1, entities, groups;
  t1 = this._entitiesByGroup;
  entities = $.index(t1, group);
  if (entities == null) {
    entities = $.Bag$(16, $.Entity);
    $.indexSet(t1, group, entities);
  }
  $.getInterceptor$JSArray(entities).add$1(entities, e);
  t1 = this._groupsByEntity;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$2$bailout(1, e, group, t1);
  if (e !== (e | 0))
    throw $.iae(e);
  if (e < 0 || e >= t1.length)
    throw $.ioore(e);
  groups = t1[e];
  if (groups == null) {
    groups = $.Bag$(16, '$.String');
    if (e >= t1.length)
      throw $.ioore(e);
    t1[e] = groups;
  }
  $.getInterceptor$JSArray(groups).add$1(groups, group);
},
 add$2$bailout: function(state0, e, group, t1) {
  var groups = $.index(t1, e);
  if (groups == null) {
    groups = $.Bag$(16, '$.String');
    $.indexSet(t1, e, groups);
  }
  $.getInterceptor$JSArray(groups).add$1(groups, group);
},
 removeFromAllGroups$1: function(e) {
  var groups, t1;
  groups = $.index(this._groupsByEntity, e);
  if (!(groups == null)) {
    t1 = $.getInterceptor$JSArray(groups);
    t1.forEach$1(groups, new $.GroupManager_removeFromAllGroups_anon(this, e));
    t1.clear$0(groups);
  }
},
 getEntities$1: function(group) {
  var t1, entities;
  t1 = this._entitiesByGroup;
  entities = $.index(t1, group);
  if (entities == null) {
    entities = $.Bag$(16, $.Entity);
    $.indexSet(t1, group, entities);
  }
  return entities;
},
 deleted$1: function(e) {
  this.removeFromAllGroups$1(e);
}
};

$$.TagManager = {"":"Manager;_entitiesByTag,_tagsByEntity,_world",
 register$2: function(tag, e) {
  $.indexSet(this._entitiesByTag, tag, e);
  $.indexSet(this._tagsByEntity, e, tag);
},
 getEntity$1: function(tag) {
  return $.index(this._entitiesByTag, tag);
},
 deleted$1: function(e) {
  var removedTag = this._tagsByEntity.remove$1(e);
  if (!(removedTag == null))
    this._entitiesByTag.remove$1(removedTag);
},
 initialize$0: function() {
}
};

$$.World = {"":"Object;_entityManager,_componentManager,_added,_changed,_deleted,_enable,_disable,_systems,_systemsBag?,_managers,_managersBag?,delta=",
 initialize$0: function() {
  this._managersBag.forEach$1(new $.World_initialize_anon());
  this._systemsBag.forEach$1(new $.World_initialize_anon0());
},
 get$entityManager: function() {
  return this._entityManager;
},
 get$componentManager: function() {
  return this._componentManager;
},
 addManager$1: function(manager) {
  $.indexSet(this._managers, $.getInterceptor(manager).get$runtimeType(manager), manager);
  this._managersBag.add$1(manager);
  manager.set$_world(this);
},
 getManager$1: function(managerType) {
  return $.index(this._managers, managerType);
},
 createEntity$0: function() {
  return this._entityManager._createEntityInstance$0();
},
 getEntity$1: function(entityId) {
  return this._entityManager._getEntity$1(entityId);
},
 addSystem$2$passive: function(system, passive) {
  system.set$world(this);
  system.set$_passive(passive);
  $.indexSet(this._systems, $.getInterceptor(system).get$runtimeType(system), system);
  this._systemsBag.add$1(system);
  return system;
},
 addSystem$1: function(system) {
  return this.addSystem$2$passive(system, false);
},
 _check$2: function(entities, perform) {
  entities.forEach$1(new $.World__check_anon(this, perform));
  entities.clear$0();
},
 process$0: function() {
  this.processEntityChanges$0();
  this._componentManager.clean$0();
  this._systemsBag.forEach$1(new $.World_process_anon());
},
 processEntityChanges$0: function() {
  this._check$2(this._added, new $.World_processEntityChanges_anon());
  this._check$2(this._changed, new $.World_processEntityChanges_anon0());
  this._check$2(this._disable, new $.World_processEntityChanges_anon1());
  this._check$2(this._enable, new $.World_processEntityChanges_anon2());
  this._check$2(this._deleted, new $.World_processEntityChanges_anon3());
},
 addEntity$1: function(e) {
  this._added.add$1(e);
},
 changedEntity$1: function(e) {
  this._changed.add$1(e);
},
 deleteEntity$1: function(e) {
  var t1 = this._deleted;
  if (t1.contains$1(e) !== true)
    t1.add$1(e);
},
 World$0: function() {
  this.addManager$1(this._entityManager);
  this.addManager$1(this._componentManager);
}
};

$$.AudioClip = {"":"Object;_manager,_name,_url,_lib2_buffer?,_hasError,_errorString,_isReadyToPlay",
 get$url: function() {
  return this._url;
},
 _onDecode$2: function(buffer, completer) {
  if (buffer == null) {
    this._hasError = true;
    this._errorString = "Error decoding buffer.";
    completer.complete$1(this);
    return;
  }
  this._hasError = false;
  this._errorString = "OK";
  this._lib2_buffer = buffer;
  this._isReadyToPlay = true;
  completer.complete$1(this);
},
 _onRequestSuccess$2: function(request, completer) {
  var response = request.get$response();
  this._manager._context.decodeAudioData$3(response, new $.AudioClip__onRequestSuccess_anon(this, completer), new $.AudioClip__onRequestSuccess_anon0(this, completer));
},
 _onRequestError$2: function(request, completer) {
  this._hasError = true;
  this._errorString = "Error fetching data";
  completer.complete$1(this);
},
 load$0: function() {
  var request, completer, t1;
  if (this.get$url() == null) {
    this._hasError = true;
    this._errorString = "No URL set.";
    return $.Future_Future$immediate(this, $.AudioClip);
  }
  this._isReadyToPlay = false;
  this._lib2_buffer = null;
  request = $.HttpRequest_HttpRequest();
  completer = $.Completer_Completer($.AudioClip);
  request.set$responseType("arraybuffer");
  t1 = request.get$on().get$load();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.AudioClip_load_anon(this, completer, request));
  t1 = request.get$on().get$error();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.AudioClip_load_anon0(this, completer, request));
  t1 = request.get$on().get$abort();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.AudioClip_load_anon1(this, completer, request));
  request.open$2("GET", $.S(this._manager.baseURL) + "/" + $.S(this.get$url()));
  request.send$0();
  return completer.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$0'); },
 get$length: function() {
  var t1 = this._lib2_buffer;
  if (t1 == null)
    return 0;
  return t1.get$duration();
}
};

$$.AudioSource = {"":"Object;_manager,_name,_output,_gainNode,_panNode,_sounds,_mutedVolume,_isPaused,_lib2_x,_lib2_y,_z,_positional",
 _setupNodes$0: function() {
  var t1, t2, t3;
  this._panNode.disconnect$1(0);
  this._gainNode.disconnect$1(0);
  t1 = this._positional === true;
  t2 = this._gainNode;
  t3 = this._output;
  if (t1) {
    t2.connect$3(this._panNode, 0, 0);
    this._panNode.connect$3(t3, 0, 0);
  } else
    t2.connect$3(t3, 0, 0);
},
 set$positional: function(b) {
  this._positional = b;
  this._setupNodes$0();
},
 playOnceIn$2: function(delay, clip) {
  var sound, t1;
  sound = $.AudioSound$_internal(this, clip, false);
  t1 = this._sounds;
  $.getInterceptor$JSArray(t1).add$1(t1, sound);
  sound.play$1(delay);
  sound.set$pause(this.get$pause());
  return sound;
},
 playLoopedIn$2: function(delay, clip) {
  var sound, t1;
  sound = $.AudioSound$_internal(this, clip, true);
  t1 = this._sounds;
  $.getInterceptor$JSArray(t1).add$1(t1, sound);
  sound.play$1(delay);
  sound.set$pause(this.get$pause());
  return sound;
},
 _scanSounds$0: function() {
  var t1, i, sound, last, t2;
  t1 = this._sounds;
  i = $.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1);
  if (typeof i !== 'number')
    return this._scanSounds$0$bailout(1, i);
  for (; i >= 0; --i) {
    sound = $.index(this._sounds, i);
    if (sound.get$isFinished() === true) {
      t1 = this._sounds;
      last = $.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1);
      t2 = this._sounds;
      $.indexSet(t2, i, $.index(t2, last));
      t2 = this._sounds;
      $.getInterceptor$JSArray(t2).removeLast$0(t2);
      $.print("removing sound.");
      sound.stop$0();
    }
  }
},
 _scanSounds$0$bailout: function(state0, i) {
  var sound, t1, last, t2;
  for (; $.geB(i, 0); i = $.sub(i, 1)) {
    sound = $.index(this._sounds, i);
    if (sound.get$isFinished() === true) {
      t1 = this._sounds;
      last = $.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1);
      t2 = this._sounds;
      $.indexSet(t2, i, $.index(t2, last));
      t2 = this._sounds;
      $.getInterceptor$JSArray(t2).removeLast$0(t2);
      $.print("removing sound.");
      sound.stop$0();
    }
  }
},
 get$pause: function() {
  return this._isPaused;
},
 set$pause: function(b) {
  if (b === true) {
    if (this._isPaused)
      return;
    this._pause$0();
    this._isPaused = true;
  } else {
    if (!this._isPaused)
      return;
    this._resume$0();
    this._isPaused = false;
  }
},
 _pause$0: function() {
  this._scanSounds$0();
  var t1 = this._sounds;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.AudioSource__pause_anon());
},
 _resume$0: function() {
  this._scanSounds$0();
  var t1 = this._sounds;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.AudioSource__resume_anon());
},
 stop$0: function() {
  var t1 = this._sounds;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.AudioSource_stop_anon());
  this._scanSounds$0();
},
 get$x: function() {
  return this._lib2_x;
},
 get$y: function() {
  return this._lib2_y;
},
 AudioSource$_internal$3: function(_manager, _name, _output) {
  var t1, t2;
  t1 = this._manager;
  this._gainNode = t1._context.createGain$0();
  this._panNode = t1._context.createPanner$0();
  this._panNode.set$coneOuterGain(1);
  this._setupNodes$0();
  t2 = $.List_List(null, $.AudioSound);
  $.setRuntimeTypeInfo(t2, [$.AudioSound]);
  this._sounds = t2;
}
};

$$.AudioSound = {"":"Object;_source,_clip,_loop,_sourceNode,_pausedTime,_startTime,_scheduledTime,_volume",
 get$isFinished: function() {
  var t1 = this._sourceNode;
  return t1 == null ? false : $.eq(t1.get$playbackState(), 3);
},
 _setupSourceNodeForPlayback$0: function() {
  var t1, t2, t3;
  t1 = this._source;
  this._sourceNode = t1._manager._context.createBufferSource$0();
  t2 = this._clip;
  if (!(t2 == null) && !(t2.get$_lib2_buffer() == null)) {
    t3 = t2.get$_lib2_buffer();
    this._sourceNode.set$buffer(t3);
    this._sourceNode.set$loopStart(0);
    t3 = t2.get$_lib2_buffer().get$duration();
    this._sourceNode.set$loopEnd(t3);
  }
  t2 = this._volume;
  this._sourceNode.get$gain().set$value(t2);
  t2 = this._loop;
  this._sourceNode.set$loop(t2);
  this._sourceNode.connect$3(t1._gainNode, 0, 0);
},
 set$pause: function(b) {
  if (b === true) {
    if (!(this._pausedTime == null))
      return;
    this._pause$0();
  } else {
    if (this._pausedTime == null)
      return;
    this._resume$0();
  }
},
 _computePausedTime$0: function() {
  var now, delta;
  now = this._source._manager._context.get$currentTime();
  delta = $.sub(now, this._startTime);
  if ($.ltB(now, this._scheduledTime))
    return $.sub(now, this._scheduledTime);
  if (this._loop)
    return $.mod(delta, this._sourceNode.get$buffer().get$duration());
  return delta;
},
 _pause$0: function() {
  if (this._startTime == null)
    return;
  $.print("Sound.pause");
  var t1 = this._sourceNode;
  if (!(t1 == null))
    $.print($.S(t1.get$playbackState()));
  if (!(this._sourceNode == null)) {
    this._pausedTime = this._computePausedTime$0();
    t1 = this._sourceNode;
    if (!(t1 == null))
      t1.stop$1(0);
    this._sourceNode = null;
    $.print("paused at " + $.S(this._pausedTime));
  }
},
 _resume$0: function() {
  var t1, t2, t3, t4, t5;
  if (this._pausedTime == null)
    return;
  $.print("Sound.resume");
  t1 = this._sourceNode;
  if (!(t1 == null))
    $.print($.S(t1.get$playbackState()));
  this._setupSourceNodeForPlayback$0();
  t1 = $.ltB(this._pausedTime, 0);
  t2 = this._pausedTime;
  t3 = this._source;
  if (t1) {
    this._pausedTime = $.neg(t2);
    $.print("Scheduling to play sound in " + $.S(this._pausedTime) + ".");
    t1 = t3._manager;
    this._scheduledTime = $.add(t1._context.get$currentTime(), this._pausedTime);
    t3 = this._sourceNode;
    t3.start$3(this._scheduledTime, 0, t3.get$buffer().get$duration());
    this._startTime = t1._context.get$currentTime();
  } else {
    $.print("Starting to play at offset " + $.S(t2));
    t1 = t3._manager;
    this._scheduledTime = t1._context.get$currentTime();
    t3 = this._sourceNode;
    t4 = this._scheduledTime;
    t5 = this._pausedTime;
    t3.start$3(t4, t5, $.sub(t3.get$buffer().get$duration(), t5));
    this._startTime = $.sub(t1._context.get$currentTime(), this._pausedTime);
  }
  this._pausedTime = null;
},
 play$1: function(when) {
  var t1 = this._sourceNode;
  if (!(t1 == null))
    t1.stop$1(0);
  this._sourceNode = null;
  this._setupSourceNodeForPlayback$0();
  t1 = this._source._manager;
  this._scheduledTime = $.add(t1._context.get$currentTime(), when);
  this._sourceNode.start$1(this._scheduledTime);
  this._startTime = t1._context.get$currentTime();
},
 stop$0: function() {
  var t1 = this._sourceNode;
  if (!(t1 == null))
    t1.stop$1(0);
  this._sourceNode = null;
  this._startTime = null;
  this._scheduledTime = null;
  this._pausedTime = null;
},
 AudioSound$_internal$3: function(_source, _clip, _loop) {
  this._setupSourceNodeForPlayback$0();
}
};

$$.AudioMusic = {"":"Object;_manager,_source,_sound,_clip",
 set$pause: function(b) {
  var t1 = this._sound;
  if (!(t1 == null))
    t1.set$pause(b);
},
 get$clip: function() {
  return this._clip;
},
 stop$0: function() {
  var t1 = this._sound;
  if (!(t1 == null)) {
    t1.stop$0();
    this._sound = null;
  }
},
 AudioMusic$_internal$2: function(_manager, output) {
  this._source = $.AudioSource$_internal(this._manager, "music", output);
  this._source.set$positional(false);
}
};

$$.AudioManager = {"":"Object;_context?,_destination,_listener,_masterGain,_musicGain,_sourceGain,baseURL=,_clips,_sources,_music,_mutedVolume,_musicPaused,_sourcesPaused",
 makeClip$2: function(name$, url) {
  var t1, clip;
  t1 = this._clips;
  clip = $.index(t1, name$);
  if (!(clip == null))
    return clip;
  clip = $.AudioClip$_internal(this, name$, url);
  $.indexSet(t1, name$, clip);
  return clip;
},
 makeSource$1: function(name$) {
  var t1, source;
  t1 = this._sources;
  source = $.index(t1, name$);
  if (!(source == null))
    return source;
  source = $.AudioSource$_internal(this, name$, this._sourceGain);
  $.indexSet(t1, name$, source);
  return source;
},
 playClipFromSource$3: function(sourceName, clipName, looped) {
  return this.playClipFromSourceIn$4(0, sourceName, clipName, looped);
},
 playClipFromSource$2: function(sourceName, clipName) {
  return this.playClipFromSource$3(sourceName, clipName, false);
},
 playClipFromSourceIn$4: function(delay, sourceName, clipName, looped) {
  var source, clip;
  source = $.index(this._sources, sourceName);
  if (source == null) {
    $.print("Could not find source " + $.S(sourceName));
    return;
  }
  clip = $.index(this._clips, clipName);
  if (clip == null) {
    $.print("Could not find clip " + $.S(clipName));
    return;
  }
  if (looped === true)
    return source.playLoopedIn$2(delay, clip);
  else
    return source.playOnceIn$2(delay, clip);
},
 AudioManager$1: function(baseURL) {
  this._context = $.AudioContext_AudioContext();
  this._destination = this._context.get$destination();
  this._listener = this._context.get$listener();
  this._masterGain = this._context.createGain$0();
  this._musicGain = this._context.createGain$0();
  this._sourceGain = this._context.createGain$0();
  this._masterGain.connect$3(this._destination, 0, 0);
  this._musicGain.connect$3(this._masterGain, 0, 0);
  this._sourceGain.connect$3(this._masterGain, 0, 0);
  this._music = $.AudioMusic$_internal(this, this._musicGain);
}
};

$$.main_anon = {"":"Closure;hudContainer_1,gameContainer_0",
 call$0: function() {
  var t1, t2;
  t1 = this.gameContainer_0;
  t1.set$width(800);
  t1.set$height(400);
  t2 = this.hudContainer_1;
  t2.set$width(800);
  t2.set$height(100);
  $.Game$(t1, t2).start$0();
}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,visiting_3,result_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;closure_2,arg1_1",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;arg2_5,arg1_4,closure_3",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":"Closure;copies_3,values_2",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_3;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_2;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_3;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":"Closure;copies_4",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":"Closure;copies_5",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":"Closure;",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":"Closure;writeSlot_8,readSlot_7,findSlot_6",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, copy0, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_7;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy0 = t2.call$1(slot);
          if (true === copy0) {
            copy0 = new Array(length$);
            t3.call$2(slot, copy0);
          }
          if (typeof copy0 !== 'object' || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !copy0.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(3, e, t3, elementCopy, length$, copy0, slot, t2, copy, i);
          for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy0[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy0[i] = elementCopy;
          ++i;
          copy = copy0;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, length$, copy, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$("structured clone of other type"));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      length$ = env1;
      e = env0;
      break;
    case 3:
      i = env8;
      copy = env7;
      t3 = env6;
      slot = env5;
      copy0 = env4;
      length$ = env3;
      elementCopy = env2;
      t2 = env1;
      e = env0;
      break;
    case 4:
      i = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, t3, copy, i, element, elementCopy, copy0, j;
      if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.getInterceptor$JSStringJSArray(e).get$length(e);
          case 2:
            state0 = 0;
            slot = this.findSlot_6.call$1(e);
            t3 = this.readSlot_7;
            copy = t3.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t2 = this.writeSlot_8;
          case 3:
            if (state0 === 3 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t2.call$2(slot, true);
                  i = 0;
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 3:
                          if (state0 === 3 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy0 = t3.call$1(slot);
                                if (true === copy0) {
                                  copy0 = new Array(length$);
                                  t2.call$2(slot, copy0);
                                }
                              case 3:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy0, j, $.index(e, j));
                                $.indexSet(copy0, i, elementCopy);
                                ++i;
                                copy = copy0;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t2.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t2.call$2(slot, copy);
              i = 0;
            }
          case 4:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$("structured clone of other type"));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":"Closure;walk_9,box_0",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.MutationObserver_observe_anon = {"":"Closure;parsedOptions_0",
 call$2: function(k, v) {
  if ($.CTC5.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, "attributeFilter"))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$("Illegal MutationObserver.observe option '" + $.S(k) + "'"));
}
};

$$.MutationObserver_observe_override = {"":"Closure;parsedOptions_1",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$.ConstantMap_forEach_anon = {"":"Closure;f_1,this_0",
 call$1: function(key) {
  return this.f_1.call$2(key, $.index(this.this_0, key));
}
};

$$.loadImages_anon = {"":"Closure;",
 call$1: function(image) {
  return $.ImageCache_withImage(image, new $.loadImages__anon());
}
};

$$.loadImages__anon = {"":"Closure;",
 call$1: function(element) {
}
};

$$.initTabbedContent_anon = {"":"Closure;tabs_2,box_0",
 call$2: function(key, value) {
  var tab, tabContent, t1;
  tab = $.query("#" + $.S(key));
  tabContent = $.query("#" + $.S(value));
  t1 = tab.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.initTabbedContent__anon(tabContent, tab, this.tabs_2, this.box_0, key));
}
};

$$.initTabbedContent__anon = {"":"Closure;tabContent_6,tab_5,tabs_4,box_0,key_3",
 call$1: function(listener) {
  var t1, t2, t3;
  t1 = this.key_3;
  t2 = this.box_0;
  if (!$.eqB(t1, t2.selectedTab_1)) {
    t3 = this.tab_5.get$classes();
    $.getInterceptor$JSArray(t3).add$1(t3, "selectedTab");
    this.tabContent_6.get$classes().remove$1("hidden");
    $.query("#" + $.S(t2.selectedTab_1)).get$classes().remove$1("selectedTab");
    t3 = $.query("#" + $.S($.index(this.tabs_4, t2.selectedTab_1))).get$classes();
    $.getInterceptor$JSArray(t3).add$1(t3, "hidden");
    t2.selectedTab_1 = t1;
  }
}
};

$$.Aspect__updateBitMask_anon = {"":"Closure;box_0",
 call$1: function(componentType) {
  var t1 = this.box_0;
  t1.mask_1 = $.or(t1.mask_1, $.ComponentTypeManager_getTypeFor(componentType).get$bit());
}
};

$$.AudioClip_load_anon = {"":"Closure;this_2,completer_1,request_0",
 call$1: function(e) {
  return this.this_2._onRequestSuccess$2(this.request_0, this.completer_1);
}
};

$$.AudioClip_load_anon0 = {"":"Closure;this_5,completer_4,request_3",
 call$1: function(e) {
  return this.this_5._onRequestError$2(this.request_3, this.completer_4);
}
};

$$.AudioClip_load_anon1 = {"":"Closure;this_8,completer_7,request_6",
 call$1: function(e) {
  return this.this_8._onRequestError$2(this.request_6, this.completer_7);
}
};

$$.AudioClip__onRequestSuccess_anon = {"":"Closure;this_1,completer_0",
 call$1: function(b) {
  return this.this_1._onDecode$2(b, this.completer_0);
}
};

$$.AudioClip__onRequestSuccess_anon0 = {"":"Closure;this_3,completer_2",
 call$1: function(b) {
  return this.this_3._onDecode$2(b, this.completer_2);
}
};

$$.World_process_anon = {"":"Closure;",
 call$1: function(system) {
  if (system.get$passive() !== true)
    system.process$0();
}
};

$$.ComponentManager_clean_anon = {"":"Closure;this_0",
 call$1: function(entity) {
  return this.this_0._removeComponentsOfEntity$1(entity);
}
};

$$.ComponentManager__removeComponentsOfEntity_anon = {"":"Closure;e_0",
 call$1: function(components) {
  $.indexSet(components, this.e_0.get$id(), null);
  return;
}
};

$$.World_processEntityChanges_anon = {"":"Closure;",
 call$2: function(observer, entity) {
  return observer.added$1(entity);
}
};

$$.World_processEntityChanges_anon0 = {"":"Closure;",
 call$2: function(observer, entity) {
  return observer.changed$1(entity);
}
};

$$.World_processEntityChanges_anon1 = {"":"Closure;",
 call$2: function(observer, entity) {
  return observer.disabled$1(entity);
}
};

$$.World_processEntityChanges_anon2 = {"":"Closure;",
 call$2: function(observer, entity) {
  return observer.enabled$1(entity);
}
};

$$.World_processEntityChanges_anon3 = {"":"Closure;",
 call$2: function(observer, entity) {
  return observer.deleted$1(entity);
}
};

$$.World__check_anon = {"":"Closure;this_1,perform_0",
 call$1: function(entity) {
  var t1, t2, t3, t4;
  t1 = this.this_1;
  t2 = t1.get$_managersBag();
  t3 = $.getInterceptor$JSArray(t2);
  t4 = this.perform_0;
  t3.forEach$1(t2, new $.World__check__anon(t4, entity));
  t1 = t1.get$_systemsBag();
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.World__check__anon0(t4, entity));
}
};

$$.World__check__anon = {"":"Closure;perform_3,entity_2",
 call$1: function(manager) {
  return this.perform_3.call$2(manager, this.entity_2);
}
};

$$.World__check__anon0 = {"":"Closure;perform_5,entity_4",
 call$1: function(system) {
  return this.perform_5.call$2(system, this.entity_4);
}
};

$$.GroupManager_removeFromAllGroups_anon = {"":"Closure;this_1,e_0",
 call$1: function(group) {
  var entities = $.index(this.this_1.get$_entitiesByGroup(), group);
  if (!(entities == null))
    entities.remove$1(this.e_0);
}
};

$$.HudRenderSystem_processSystem_anon = {"":"Closure;this_0",
 call$1: function(image) {
  return this.this_0.get$context2d().drawImage$5(image, 0, 0, 800, 100);
}
};

$$.ImageCache_withImage_anon = {"":"Closure;action_3,imageName_2,box_0",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.action_3;
  t2 = this.box_0;
  t1.call$1(t2.image_1);
  $.indexSet($.get$ImageCache_loadedImages(), this.imageName_2, t2.image_1);
}
};

$$.EntityProcessingSystem_processEntities_anon = {"":"Closure;this_0",
 call$1: function(entity) {
  return this.this_0.processEntity$1(entity);
}
};

$$.BulletSpawningSystem_fireBullet_getVelocityAfterRecoil = {"":"Closure;cannon_1,shooterMass_0",
 call$2: function(shooterVel, bulletVelMultiplier) {
  var t1, p1, t2;
  t1 = this.shooterMass_0;
  p1 = $.mul(shooterVel, t1.get$value());
  t2 = this.cannon_1;
  return $.div($.sub(p1, $.mul($.mul($.mul(t2.get$bulletSpeed(), bulletVelMultiplier), t2.get$bulletMass()), t2.get$amount())), t1.get$value());
}
};

$$.AudioSource__resume_anon = {"":"Closure;",
 call$1: function(sound) {
  sound.set$pause(false);
}
};

$$.AudioSource_stop_anon = {"":"Closure;",
 call$1: function(sound) {
  sound.stop$0();
}
};

$$.AudioSource__pause_anon = {"":"Closure;",
 call$1: function(sound) {
  sound.set$pause(true);
}
};

$$.OnScreenProcessingSystem_processEntities_anon = {"":"Closure;entitiesOnScreen_2,cameraPos_1,this_0",
 call$1: function(entity) {
  var t1, pos, t2;
  t1 = this.this_0;
  pos = t1.get$transformMapper().get$1(entity);
  t2 = this.cameraPos_1;
  if (t1.isWithtinXRange$2(pos, t2) === true && t1.isWithtinYRange$2(pos, t2) === true) {
    t1 = this.entitiesOnScreen_2;
    $.getInterceptor$JSArray(t1).add$1(t1, entity);
  }
}
};

$$.OnScreenEntityProcessingSystem_processEntitiesOnScreen_anon = {"":"Closure;this_0",
 call$1: function(entity) {
  return this.this_0.processEntityOnScreen$1(entity);
}
};

$$.SpatialRenderingSystem_processEntityOnScreen_anon = {"":"Closure;spatial_2,entity_1,this_0",
 call$1: function(image) {
  return this.this_0.drawImage$3(image, this.entity_1, this.spatial_2);
}
};

$$.MiniMapRenderSystem_processEntities_anon = {"":"Closure;this_0",
 call$1: function(entity) {
  var t1, transform, renderable, body, t2;
  t1 = this.this_0;
  transform = t1.get$transformMapper().get$1(entity);
  renderable = t1.get$renderableMapper().get$1(entity);
  body = t1.get$bodyMapper().get$1(entity);
  t2 = renderable.get$color();
  t1.get$context2d().set$fillStyle(t2);
  t2 = renderable.get$color();
  t1.get$context2d().set$strokeStyle(t2);
  t1.get$context2d().beginPath$0();
  t1.get$context2d().fillRect$4($.sub(transform.get$x(), $.div(body.get$radius(), 2)), $.sub(transform.get$y(), $.div(body.get$radius(), 2)), body.get$radius(), body.get$radius());
  t1.get$context2d().closePath$0();
}
};

$$.World_initialize_anon = {"":"Closure;",
 call$1: function(manager) {
  return manager.initialize$0();
}
};

$$.World_initialize_anon0 = {"":"Closure;",
 call$1: function(system) {
  return system.initialize$0();
}
};

$$.BackgroundRenderSystem_initBackground_anon = {"":"Closure;spatialMapper_2,bgContext_1,transformMapper_0",
 call$1: function(entity) {
  var transform = this.transformMapper_0.get$1(entity);
  $.ImageCache_withImage(this.spatialMapper_2.get$1(entity).get$resource(), new $.BackgroundRenderSystem_initBackground__anon(transform, this.bgContext_1));
  entity.deleteFromWorld$0();
}
};

$$.BackgroundRenderSystem_initBackground__anon = {"":"Closure;transform_4,bgContext_3",
 call$1: function(image) {
  var t1, t2;
  t1 = this.bgContext_3;
  t1.beginPath$0();
  t2 = this.transform_4;
  t1.drawImage$5(image, $.sub(t2.get$x(), $.tdiv(image.get$width(), 2)), $.sub(t2.get$y(), $.tdiv(image.get$height(), 2)), image.get$width(), image.get$height());
  t1.closePath$0();
}
};

$$.CssClassSet_clear_anon = {"":"Closure;",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).clear$0(s);
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.CssClassSet_add_anon = {"":"Closure;value_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
}
};

$$.BoundClosure = {'':
"Closure;self,target",
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure0 = {'':
"Closure;self,target",
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure1 = {'':
"Closure;self,target",
call$1: function(p0) { return this.self[this.target](p0); }
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CTC1.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CTC1.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$.not = function(a) {
  if (typeof a === "number")
    return (~a) >>> 0;
  return a.operator$not$0();
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.ListIterator$ = function(list, T) {
  var t1 = new $.ListIterator(0, list);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CTC2.endsWith$1(message, "is null") === true || $.CTC2.endsWith$1(message, "is undefined") === true || $.CTC2.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CTC0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg2, arg1, closure).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.stringLastIndexOfUnchecked = function(receiver, element, start) {
  return receiver.lastIndexOf(element, start);
};

$.createInvocationMirror = function(name$, internalName, type, arguments$, argumentNames) {
  return $.JSInvocationMirror$(name$, internalName, type, arguments$, argumentNames);
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$.AudioContext_AudioContext = function() {
  return new (window.AudioContext || window.webkitAudioContext)();
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.getTypeArgumentAsString = function(runtimeType) {
  var className = $.runtimeTypeToString($.index(runtimeType, 0));
  if ($.eqB($.getInterceptor$JSStringJSArray(runtimeType).get$length(runtimeType), 1))
    return className;
  return $.S(className) + "<" + $.S($.joinArguments(runtimeType, 1)) + ">";
};

$.runtimeTypeToString = function(type) {
  var t1 = type == null;
  if (t1)
    return "dynamic";
  else if (typeof type === 'string')
    return type;
  else if (!t1 && type.constructor === Array)
    return $.getTypeArgumentAsString(type);
  else
    return type.builtin$cls;
};

$.joinArguments = function(types, startIndex) {
  var buffer, t1, index, firstArgument;
  if (typeof types !== 'string' && (typeof types !== 'object' || types === null || types.constructor !== Array && !types.is$JavaScriptIndexingBehavior()))
    return $.joinArguments$bailout(1, types, startIndex);
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t1.add$1(buffer, ", ");
    if (index < 0 || index >= types.length)
      throw $.ioore(index);
    t1.add$1(buffer, $.runtimeTypeToString(types[index]));
  }
  return t1.toString$0(buffer);
};

$.getRuntimeTypeString = function(object) {
  var className, typeInfo;
  className = !(object == null) && object.constructor === Array ? "List" : object.constructor.builtin$cls;
  typeInfo = object.builtin$typeInfo;
  if (typeInfo == null)
    return className;
  return className + "<" + $.S($.joinArguments(typeInfo, 0)) + ">";
};

$.createRuntimeType = function(name$) {
  return $.TypeImpl$(name$);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.LinkedHashMap_LinkedHashMap = function(K, V) {
  return $._LinkedHashMapImpl$(K, V);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods["Object"];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC12)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$._LinkedHashMapImpl$ = function(K, V) {
  var t1 = new $._LinkedHashMapImpl(null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null, '$.Match');
  $.setRuntimeTypeInfo(result, ['$.Match']);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CTC2.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CTC2.substring$1(receiver, startIndex));
  else {
    substr = $.CTC2.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CTC2.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.DoubleLinkedQueue$ = function(E) {
  var t1 = new $.DoubleLinkedQueue(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._KeyValuePair$ = function(key, value, K, V) {
  var t1 = new $._KeyValuePair(key, value);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.DoubleLinkedQueueEntry$ = function(e, E) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.ComponentType$ = function() {
  var t1 = new $.ComponentType(0, 0);
  t1.ComponentType$0();
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel, E) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function(E) {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.TypeImpl$ = function(typeName) {
  return new $.TypeImpl(typeName);
};

$.ComponentTypeManager_getTypeFor = function(componentType) {
  var type;
  if (null == $.ComponentTypeManager__componentTypes)
    $.ComponentTypeManager__componentTypes = $.Map_Map('$.Type', $.ComponentType);
  type = $.index($.ComponentTypeManager__componentTypes, componentType);
  if (type == null) {
    type = $.ComponentType$();
    $.indexSet($.ComponentTypeManager__componentTypes, componentType, type);
  }
  return type;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_collectionToString = function(c) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Collections__emitCollection(c, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Game$ = function(gameCanvas, hudCanvas) {
  var t1 = new $.Game(gameCanvas, hudCanvas, null, null, 0, null);
  t1.Game$2(gameCanvas, hudCanvas);
  return t1;
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.JSInvocationMirror$ = function(memberName, _internalName, _kind, _arguments, _namedArgumentNames) {
  return new $.JSInvocationMirror(memberName, _internalName, _kind, _arguments, _namedArgumentNames, null);
};

$.World$ = function() {
  var t1 = new $.World($.EntityManager$(), $.ComponentManager$(), $.Bag$(16, $.Entity), $.Bag$(16, $.Entity), $.Bag$(16, $.Entity), $.Bag$(16, $.Entity), $.Bag$(16, $.Entity), $.Map_Map('$.Type', '$.EntitySystem'), $.Bag$(16, '$.EntitySystem'), $.Map_Map('$.Type', '$.Manager'), $.Bag$(16, '$.Manager'), null);
  t1.World$0();
  return t1;
};

$.Maps_mapToString = function(m) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Maps__emitMap(m, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_1 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, visiting, result));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.main = function() {
  var gameContainer, hudContainer;
  $.initTabbedContent();
  $.loadImages();
  gameContainer = $.query("#gamecontainer");
  hudContainer = $.query("#hudcontainer");
  $.window().requestLayoutFrame$1(new $.main_anon(hudContainer, gameContainer));
};

$.loadImages = function() {
  $.CTC0.forEach$1(["spaceship.png", "spaceship_thrusters.png", "hud_dummy.png", "bullet_dummy.png", "star_00.png", "star_01.png", "star_02.png", "star_03.png", "star_04.png", "star_05.png", "upgrade_health.png", "upgrade_bullets.png"], new $.loadImages_anon());
};

$.initTabbedContent = function() {
  var t1, tabs;
  t1 = {};
  tabs = $.makeLiteralMap(["tabStory", "story", "tabControls", "controls", "tabCredits", "credits", "tabDebug", "debug"]);
  t1.selectedTab_1 = "tabStory";
  $.getInterceptor$JSArray(tabs).forEach$1(tabs, new $.initTabbedContent_anon(tabs, t1));
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.AudioManager$ = function(baseURL) {
  var t1 = new $.AudioManager(null, null, null, null, null, null, baseURL, $.Map_Map('$.String', $.AudioClip), $.Map_Map('$.String', $.AudioSource), null, null, false, false);
  t1.AudioManager$1(baseURL);
  return t1;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if (!!(window.MutationObserver || window.WebKitMutationObserver))
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler("DART-MEASURE", false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$._SystemBitManager__getBitFor = function(esType) {
  var bit, t1;
  if (null == $._SystemBitManager__systemBits)
    $._SystemBitManager__systemBits = $.Map_Map('$.Type', '$.$int');
  bit = $.index($._SystemBitManager__systemBits, esType);
  if (bit == null) {
    t1 = $._SystemBitManager__POS;
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    bit = $.shl(1, t1);
    $._SystemBitManager__POS = $.add($._SystemBitManager__POS, 1);
    $.indexSet($._SystemBitManager__systemBits, esType, bit);
  }
  return bit;
};

$.EntityManager$ = function() {
  return new $.EntityManager($.Bag$(16, $.Entity), $.Bag$(16, 'bool'), 0, 0, 0, 0, $._IdentifierPool$(), null);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.ComponentManager$ = function() {
  return new $.ComponentManager($.Bag$(16, [$.Bag, '$.Component']), $.Bag$(16, $.Entity), null);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.Bag$ = function(capacity, E) {
  var t1 = new $.Bag(null, 0);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.Bag$1$capacity(capacity);
  return t1;
};

$.Entity$ = function(_world, id) {
  var t1 = new $.Entity(id, 0, 0, 0, _world, null, null);
  t1.Entity$2(_world, id);
  return t1;
};

$._IdentifierPool$ = function() {
  return new $._IdentifierPool($.Bag$(16, '$.$int'), 0);
};

$.AudioClip$_internal = function(_manager, _name, _url) {
  return new $.AudioClip(_manager, _name, _url, null, false, "", false);
};

$.GroupManager$ = function() {
  return new $.GroupManager($.Map_Map('$.String', [$.Bag, $.Entity]), $.Map_Map($.Entity, [$.Bag, '$.String']), null);
};

$.AudioSource$_internal = function(_manager, _name, _output) {
  var t1 = new $.AudioSource(_manager, _name, _output, null, null, null, null, false, 0, 0, 0, true);
  t1.AudioSource$_internal$3(_manager, _name, _output);
  return t1;
};

$.TagManager$ = function() {
  return new $.TagManager($.Map_Map('$.String', $.Entity), $.Map_Map($.Entity, '$.String'), null);
};

$.AudioMusic$_internal = function(_manager, output) {
  var t1 = new $.AudioMusic(_manager, null, null, null);
  t1.AudioMusic$_internal$2(_manager, output);
  return t1;
};

$.Transform$hack = function() {
  return new $.Transform(null, null, null, null);
};

$.Transform$ = function(x, y, angle, rotationRate) {
  return new $.Transform($.mod(x, 1600), $.mod(y, 1600), angle, rotationRate);
};

$.Velocity$hack = function() {
  return new $.Velocity(null, null);
};

$.Velocity$ = function(x, y) {
  return new $.Velocity(x, y);
};

$.Spatial$hack = function() {
  return new $.Spatial(null, null, null, null, null, null, null);
};

$.Spatial$ = function(resource, scale) {
  var t1 = new $.Spatial(resource, null, null, null, null, null, scale);
  t1.Spatial$2$scale(resource, scale);
  return t1;
};

$.Spatial$asSprite = function(resource, x, y, width, height, scale) {
  var t1 = new $.Spatial(resource, null, width, height, x, y, scale);
  t1.Spatial$asSprite$6$scale(resource, x, y, width, height, scale);
  return t1;
};

$.ImageCache_withImage = function(imageName, action) {
  var t1, t2;
  t1 = {};
  t1.image_1 = $.index($.get$ImageCache_loadedImages(), imageName);
  t2 = t1.image_1;
  if (null == t2) {
    t1.image_1 = $.ImageElement_ImageElement(null, null, null);
    t2 = t1.image_1.get$on().get$load();
    $.getInterceptor$JSArray(t2).add$1(t2, new $.ImageCache_withImage_anon(action, imageName, t1));
    t2 = "resources/" + $.S(imageName);
    t1.image_1.set$src(t2);
  } else
    action.call$1(t2);
};

$.Spatial$fromSpatial = function(spatial, scale) {
  return new $.Spatial(spatial.get$resource(), spatial.get$isSprite(), spatial.get$width(), spatial.get$height(), spatial.get$x(), spatial.get$y(), scale);
};

$.AudioManagerDummy$ = function() {
  return new $.AudioManagerDummy();
};

$.CircularBody$ = function(radius) {
  return new $.CircularBody(radius);
};

$.Mass$hack = function() {
  return new $.Mass(null);
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.Status$ = function(maxHealth, maxVelocity) {
  var t1 = new $.Status(null, maxHealth, maxVelocity, false);
  t1.Status$2$maxHealth$maxVelocity(maxHealth, maxVelocity);
  return t1;
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.MiniMapRenderable$hack = function() {
  return new $.MiniMapRenderable(null);
};

$.MiniMapRenderable$ = function(color) {
  return new $.MiniMapRenderable(color);
};

$.Cannon$hack = function() {
  return new $.Cannon(false, 0, 0, null, null, null, null);
};

$.HashMap_HashMap = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$._HashMapImpl$ = function(K, V) {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._HashMapImpl$0();
  return t1;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.Status$hack = function() {
  return new $.Status(null, null, null, false);
};

$.Mass$ = function(value) {
  return new $.Mass(value);
};

$.CircularBody$hack = function() {
  return new $.CircularBody(null);
};

$.Cannon$ = function(amount, bulletDamage, bulletMass, bulletSpeed, cooldownTime) {
  return new $.Cannon(false, 0, cooldownTime, bulletSpeed, bulletMass, bulletDamage, amount);
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.document().$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.CameraPosition$hack = function() {
  return new $.CameraPosition(null, null, null, null);
};

$.CameraPosition$ = function(x, y) {
  return new $.CameraPosition($.mod(x, 1600), $.mod(y, 1600), 0, 0);
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$._addMeasurementFrameCallback = function(callback) {
  var t1;
  if ($._pendingMeasurementFrameCallbacks == null) {
    $._pendingMeasurementFrameCallbacks = [];
    $._maybeScheduleMeasurementFrame();
  }
  t1 = $._pendingMeasurementFrameCallbacks;
  $.getInterceptor$JSArray(t1).add$1(t1, callback);
};

$._completeMeasurementFutures = function(exception) {
  var t1, request, t2, e, completedRequests, readyMeasurementFrameCallbacks, t3, t4;
  t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      request = t1.next$0();
      try {
        t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  completedRequests = $._pendingRequests;
  readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.getInterceptor$JSArray(completedRequests).iterator$0(completedRequests); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = t2.get$exception() === true;
      t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.getInterceptor$JSArray(readyMeasurementFrameCallbacks).iterator$0(readyMeasurementFrameCallbacks); t1.get$hasNext() === true;)
      t1.next$0().call$0();
};

$.Background$hack = function() {
  return new $.Background();
};

$.Background$ = function() {
  return new $.Background();
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$.convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t2, t1).call$1(value);
  t4.call$0();
  return copy;
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();
};

$.SplitsOnDestruction$hack = function() {
  return new $.SplitsOnDestruction(null);
};

$.SplitsOnDestruction$ = function(parts) {
  return new $.SplitsOnDestruction(parts);
};

$.FixedSizeListIterator$ = function(array, T) {
  var t1 = new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.Completer_Completer = function(T) {
  return $._CompleterImpl$(T);
};

$.Upgrade$hack = function() {
  return new $.Upgrade(null, null);
};

$.Upgrade$ = function(bullets, maxHealth) {
  return new $.Upgrade(maxHealth, bullets);
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.PlayerControlSystem$ = function(canvas) {
  var t1, t2;
  t1 = $.Aspect_getEmpty();
  t2 = new $.PlayerControlSystem(87, 65, 68, 74, false, false, false, false, 0, 0, null, null, null, null, canvas, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t2.EntitySystem$1(t1);
  return t2;
};

$.Aspect_getAspectForAllOf = function(requiredComponentType, componentTypes) {
  var aspect = $.Aspect$();
  aspect.allOf$2(requiredComponentType, componentTypes);
  return aspect;
};

$.Aspect_getEmpty = function() {
  return $.Aspect$();
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.Aspect$ = function() {
  return new $.Aspect(0, 0, 0);
};

$.MovementSystem$ = function() {
  var t1, t2, t3;
  t1 = $.Transform$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Velocity$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [$.getInterceptor(t2).get$runtimeType(t2)]);
  t3 = new $.MovementSystem(null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t3.EntitySystem$1(t1);
  return t3;
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.atan2 = function(a, b) {
  return Math.atan2($.checkNum(a), $.checkNum(b));
};

$._CompleterImpl$ = function(T) {
  var t1 = new $._CompleterImpl($._FutureImpl$());
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.ComponentMapper$ = function(componentType, world, A) {
  var t1 = new $.ComponentMapper(null, null);
  $.setRuntimeTypeInfo(t1, [A]);
  t1.ComponentMapper$2(componentType, world);
  return t1;
};

$.AudioSound$_internal = function(_source, _clip, _loop) {
  var t1 = new $.AudioSound(_source, _clip, _loop, null, null, null, null, 1);
  t1.AudioSound$_internal$3(_source, _clip, _loop);
  return t1;
};

$.UpgradeCollectionSystem$ = function() {
  var t1, t2, t3, t4, t5;
  t1 = $.Upgrade$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Transform$hack();
  t2 = $.getInterceptor(t2).get$runtimeType(t2);
  t3 = $.CircularBody$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [t2, $.getInterceptor(t3).get$runtimeType(t3)]);
  t4 = $.Transform$hack();
  t1 = t1.allOf$1($.getInterceptor(t4).get$runtimeType(t4));
  t5 = new $.UpgradeCollectionSystem(null, null, null, null, null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t5.EntitySystem$1(t1);
  return t5;
};

$._FutureImpl$ = function(T) {
  var t1 = new $._FutureImpl(false, null, null, null, false, false, [], [], []);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._FutureImpl__FutureImpl$immediate = function(value, T) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$.CircularCollisionDetectionSystem$ = function() {
  var t1, t2, t3, t4, t5, t6;
  t1 = $.CircularBody$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Transform$hack();
  t2 = $.getInterceptor(t2).get$runtimeType(t2);
  t3 = $.Velocity$hack();
  t3 = $.getInterceptor(t3).get$runtimeType(t3);
  t4 = $.Mass$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [t2, t3, $.getInterceptor(t4).get$runtimeType(t4)]);
  t5 = $.Transform$hack();
  t1 = t1.allOf$1($.getInterceptor(t5).get$runtimeType(t5));
  t6 = new $.CircularCollisionDetectionSystem(null, null, null, null, null, null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t6.EntitySystem$1(t1);
  return t6;
};

$.Damage$hack = function() {
  return new $.Damage(null, null);
};

$.Damage$ = function(maxValue) {
  var t1 = new $.Damage(null, maxValue);
  t1.Damage$1(maxValue);
  return t1;
};

$.ExpirationTimer$hack = function() {
  return new $.ExpirationTimer(0, null);
};

$.ExpirationTimer$ = function(maxTime) {
  var t1 = new $.ExpirationTimer(maxTime, null);
  t1.ExpirationTimer$1(maxTime);
  return t1;
};

$.Set_Set = function(E) {
  return $._HashSetImpl$(E);
};

$.BulletSpawningSystem$ = function() {
  var t1, t2, t3, t4, t5;
  t1 = $.Cannon$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Transform$hack();
  t2 = $.getInterceptor(t2).get$runtimeType(t2);
  t3 = $.Velocity$hack();
  t3 = $.getInterceptor(t3).get$runtimeType(t3);
  t4 = $.Mass$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [t2, t3, $.getInterceptor(t4).get$runtimeType(t4)]);
  t5 = new $.BulletSpawningSystem(null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t5.EntitySystem$1(t1);
  return t5;
};

$.Future_Future$immediate = function(value, T) {
  return $._FutureImpl__FutureImpl$immediate(value, T);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.Utils_doCirclesCollide = function(x1, y1, radius1, x2, y2, radius2) {
  var dx, dy, d;
  dx = $.sub(x2, x1);
  dy = $.sub(y2, y1);
  d = $.add(radius1, radius2);
  return $.lt($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(d, d));
};

$.SplittingDestructionSystem$ = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8;
  t1 = $.SplitsOnDestruction$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.CircularBody$hack();
  t2 = $.getInterceptor(t2).get$runtimeType(t2);
  t3 = $.Status$hack();
  t3 = $.getInterceptor(t3).get$runtimeType(t3);
  t4 = $.Velocity$hack();
  t4 = $.getInterceptor(t4).get$runtimeType(t4);
  t5 = $.Mass$hack();
  t5 = $.getInterceptor(t5).get$runtimeType(t5);
  t6 = $.Spatial$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [t2, t3, t4, t5, $.getInterceptor(t6).get$runtimeType(t6)]);
  t7 = $.Transform$hack();
  t1 = t1.allOf$1($.getInterceptor(t7).get$runtimeType(t7));
  t8 = new $.SplittingDestructionSystem(null, null, null, null, null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t8.EntitySystem$1(t1);
  return t8;
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.DisapperearingDestructionSystem$ = function() {
  var t1, t2, t3, t4;
  t1 = $.DisappearsOnDestruction$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Status$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [$.getInterceptor(t2).get$runtimeType(t2)]);
  t3 = $.Transform$hack();
  t1 = t1.allOf$1($.getInterceptor(t3).get$runtimeType(t3));
  t4 = new $.DisapperearingDestructionSystem(null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t4.EntitySystem$1(t1);
  return t4;
};

$.DisappearsOnDestruction$hack = function() {
  return new $.DisappearsOnDestruction();
};

$.DisappearsOnDestruction$ = function() {
  return new $.DisappearsOnDestruction();
};

$.ExpirationSystem$ = function() {
  var t1, t2, t3;
  t1 = $.ExpirationTimer$hack();
  t2 = $.Aspect_getAspectForAllOf($.getInterceptor(t1).get$runtimeType(t1), null);
  t3 = new $.ExpirationSystem(null, null, 0, null, $.Bag$(16, $.Entity), t2.get$all(), t2.get$excluded(), t2.get$one(), null, null);
  t3.EntitySystem$1(t2);
  return t3;
};

$.PlayerDestructionSystem$ = function() {
  var t1, t2;
  t1 = $.Aspect_getEmpty();
  t2 = new $.PlayerDestructionSystem(null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t2.EntitySystem$1(t1);
  return t2;
};

$.CameraSystem$ = function() {
  var t1, t2;
  t1 = $.Aspect_getEmpty();
  t2 = new $.CameraSystem(null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  t2.EntitySystem$1(t1);
  return t2;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.BackgroundRenderSystem$ = function(context2d) {
  var t1 = $.Aspect_getEmpty();
  context2d = new $.BackgroundRenderSystem(50, 50, null, context2d, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  context2d.EntitySystem$1(t1);
  return context2d;
};

$.SpatialRenderingSystem$ = function(context2d) {
  var t1, t2, t3, t4;
  t1 = $.Spatial$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Transform$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [$.getInterceptor(t2).get$runtimeType(t2)]);
  t3 = $.Background$hack();
  t1 = t1.exclude$1($.getInterceptor(t3).get$runtimeType(t3));
  t4 = $.Transform$hack();
  t1 = t1.allOf$1($.getInterceptor(t4).get$runtimeType(t4));
  context2d = new $.SpatialRenderingSystem(context2d, null, null, null, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  context2d.EntitySystem$1(t1);
  return context2d;
};

$.MiniMapRenderSystem$ = function(context2d) {
  var t1, t2, t3;
  t1 = $.MiniMapRenderable$hack();
  t1 = $.getInterceptor(t1).get$runtimeType(t1);
  t2 = $.Transform$hack();
  t2 = $.getInterceptor(t2).get$runtimeType(t2);
  t3 = $.CircularBody$hack();
  t1 = $.Aspect_getAspectForAllOf(t1, [t2, $.getInterceptor(t3).get$runtimeType(t3)]);
  context2d = new $.MiniMapRenderSystem(context2d, null, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  context2d.EntitySystem$1(t1);
  return context2d;
};

$.HudRenderSystem$ = function(context2d) {
  var t1 = $.Aspect_getEmpty();
  context2d = new $.HudRenderSystem(context2d, null, null, 0, null, $.Bag$(16, $.Entity), t1.get$all(), t1.get$excluded(), t1.get$one(), null, null);
  context2d.EntitySystem$1(t1);
  return context2d;
};

$.SoundSystem$ = function(audioManager) {
  var t1, t2, t3;
  t1 = $.Sound$hack();
  t2 = $.Aspect_getAspectForAllOf($.getInterceptor(t1).get$runtimeType(t1), null);
  t3 = new $.SoundSystem(audioManager, null, 0, null, $.Bag$(16, $.Entity), t2.get$all(), t2.get$excluded(), t2.get$one(), null, null);
  t3.EntitySystem$1(t2);
  return t3;
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$.Sound$hack = function() {
  return new $.Sound(null, null);
};

$.Sound$ = function(source, clip) {
  return new $.Sound(source, clip);
};

$.DebugSystem$ = function() {
  var t1, t2, t3, t4, t5;
  t1 = $.query("#fps");
  t2 = $.query("#playerPos");
  t3 = $.query("#cameraPos");
  t4 = $.query("#entityCount");
  t5 = $.Aspect_getEmpty();
  t4 = new $.DebugSystem(t1, t2, t3, t4, null, null, null, 0, null, $.Bag$(16, $.Entity), t5.get$all(), t5.get$excluded(), t5.get$one(), null, null);
  t4.EntitySystem$1(t5);
  return t4;
};

$.Random_Random = function(seed) {
  return $.CTC11;
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.document().$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.createAudioManager = function(location$, exception) {
  var audioManager, t1, slashIndex, source, clip;
  try {
    audioManager = $.AudioManager$("/");
    t1 = location$;
    slashIndex = $.getInterceptor$JSStringJSArray(t1).lastIndexOf$1(t1, "/");
    if ($.ltB(slashIndex, 0))
      audioManager.set$baseURL("");
    else {
      t1 = location$;
      t1 = $.getInterceptor$JSString(t1).substring$2(t1, 0, slashIndex);
      audioManager.set$baseURL(t1);
    }
    source = audioManager.makeSource$1("non-positional");
    source.set$positional(false);
    clip = audioManager.makeClip$2("shoot_sound", "resources/shoot.ogg");
    clip.load$0();
    t1 = audioManager;
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
  }

  return $.AudioManagerDummy$();
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$.generateRandomVelocity = function(minSpeed, maxSpeed) {
  var t1, randomNumber, velx;
  t1 = $.get$random().nextDouble$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  randomNumber = minSpeed + maxSpeed * t1;
  velx = randomNumber * ($.get$random().nextBool$0() === true ? 1 : -1);
  t1 = $.get$random().nextDouble$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  randomNumber = minSpeed + maxSpeed * t1;
  return $.Velocity$(velx, randomNumber * ($.get$random().nextBool$0() === true ? 1 : -1));
};

$.generateRandom = function(min, max) {
  var t1 = $.get$random().nextDouble$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return min + max * t1;
};

$.TrigUtil_sin = function(rad) {
  var t1 = $.mul(rad, 651.8986469044033);
  return $.TrigUtil__sin($.and($.getInterceptor$JSNumber(t1).toInt$0(t1), 4095));
};

$.TrigUtil_cos = function(rad) {
  var t1 = $.mul(rad, 651.8986469044033);
  return $.TrigUtil__cos($.and($.getInterceptor$JSNumber(t1).toInt$0(t1), 4095));
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.TrigUtil__sin = function(index) {
  if (null == $.TrigUtil__sinLookUpTable)
    $.TrigUtil__sinLookUpTable = $.TrigUtil__createLookUpTable($.sin);
  return $.index($.TrigUtil__sinLookUpTable, index);
};

$.TrigUtil__cos = function(index) {
  if (null == $.TrigUtil__cosLookUpTable)
    $.TrigUtil__cosLookUpTable = $.TrigUtil__createLookUpTable($.cos);
  return $.index($.TrigUtil__cosLookUpTable, index);
};

$.TrigUtil__createLookUpTable = function(f) {
  var lookUpTable, i, t1;
  lookUpTable = $.List_List(4096, '$.num');
  $.setRuntimeTypeInfo(lookUpTable, ['$.num']);
  for (i = 0; i < 4096; ++i) {
    t1 = f.call$1((i + 0.5) / 4096 * 6.283185307179586);
    if (i >= lookUpTable.length)
      throw $.ioore(i);
    lookUpTable[i] = t1;
  }
  return lookUpTable;
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.List_List = function(length$, E) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other, E) {
  var list, t1;
  list = $.List_List(null, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    if (typeof count !== 'number')
      throw $.iae(count);
    i = srcStart + count - 1;
    j = dstStart + count - 1;
    t1 = src.length;
    t2 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  } else {
    t1 = src.length;
    t2 = dst.length;
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== 'number')
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
      ++i;
      ++j;
    }
  }
};

$.Arrays_lastIndexOf = function(a, element, startIndex) {
  var t1, i;
  if (startIndex !== (startIndex | 0))
    return $.Arrays_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (i = startIndex; i >= 0; --i) {
    if (i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_lastIndexOf = function(a, element, startIndex) {
  var t1, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (i = startIndex; i >= 0; --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._HashSetImpl$ = function(E) {
  var t1 = new $._HashSetImpl(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetImpl$0();
  return t1;
};

$.Map_Map = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$._HashSetIterator$ = function(set_, E) {
  var t1 = new $._HashSetIterator(set_._backingMap.get$_keys(), -1);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.DivElement_DivElement = function() {
  return $.document().$dom_createElement$1("div");
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.joinArguments$bailout = function(state0, types, startIndex) {
  var buffer, t1, index, firstArgument;
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; $.ltB(index, $.getInterceptor$JSStringJSArray(types).get$length(types)); ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t1.add$1(buffer, ", ");
    t1.add$1(buffer, $.runtimeTypeToString($.index(types, index)));
  }
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart) {
    if (typeof count !== 'number')
      throw $.iae(count);
    i = srcStart + count - 1;
    j = dstStart + count - 1;
    for (; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  } else {
    j = dstStart;
    i = srcStart;
    while (true) {
      if (typeof count !== 'number')
        throw $.iae(count);
      if (!(i < srcStart + count))
        break;
      $.indexSet(dst, j, $.index(src, i));
      ++i;
      ++j;
    }
  }
};

$.Arrays_lastIndexOf$bailout = function(state0, a, element, startIndex) {
  var i;
  if ($.ltB(startIndex, 0))
    return -1;
  if ($.geB(startIndex, a.length))
    startIndex = a.length - 1;
  for (i = startIndex; $.geB(i, 0); --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Lists_lastIndexOf$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      startIndex = env2;
      element = env1;
      a = env0;
      break;
    case 2:
      startIndex = env2;
      element = env1;
      a = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if ($.ltB(startIndex, 0))
        return -1;
      t1 = $.getInterceptor$JSStringJSArray(a);
      if ($.geB(startIndex, t1.get$length(a)))
        startIndex = $.sub(t1.get$length(a), 1);
    case 2:
      var startIndex, element, a, t1, i;
      state0 = 0;
      for (i = startIndex; $.geB(i, 0); i = $.sub(i, 1))
        if ($.eqB($.index(a, i), element))
          return i;
      return -1;
  }
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.sin.call$1 = $.sin;
$.sin.$name = "sin";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.cos.call$1 = $.cos;
$.cos.$name = "cos";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CTC3 = new Isolate.$isolateProperties.JSInt();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC13 = Isolate.makeConstantList(["childList", "attributes", "characterData", "subtree", "attributeOldValue", "characterDataOldValue"]);
$.CTC5 = new Isolate.$isolateProperties.ConstantMap(6, {childList: true, attributes: true, characterData: true, subtree: true, attributeOldValue: true, characterDataOldValue: true}, Isolate.$isolateProperties.CTC13);
$.CTC2 = new Isolate.$isolateProperties.JSString();
$.CTC = new Isolate.$isolateProperties.NullThrownError();
$.CTC6 = new Isolate.$isolateProperties.JSDouble();
$.CTC4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC8 = $.createRuntimeType('$int');
$.CTC12 = new Isolate.$isolateProperties.Object();
$.CTC7 = $.createRuntimeType('String');
$.CTC11 = new Isolate.$isolateProperties._Random();
$.CTC9 = $.createRuntimeType('bool');
$.CTC10 = $.createRuntimeType('$double');
$.CTC0 = new Isolate.$isolateProperties.JSArray();
$.CTC1 = new Isolate.$isolateProperties.JSNumber();
$._SystemBitManager__POS = 0;
$._SystemBitManager__systemBits = null;
$.ComponentType__nextBit = 1;
$.ComponentType__nextId = 0;
$.TrigUtil__sinLookUpTable = null;
$.TrigUtil__cosLookUpTable = null;
$.ComponentTypeManager__componentTypes = null;
$.PI = 3.141592653589793;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC4;
$.Primitives_hashCodeSeed = 0;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.Primitives_mirrorsEnabled = false;
$.JSInvocationMirror_METHOD = 0;
$.AudioBufferSourceNode_FINISHED_STATE = 3;
$.JSInvocationMirror_GETTER = 1;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._pendingRequests = null;
$._pendingMeasurementFrameCallbacks = null;
$._measurementScheduler = null;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$.MAX_WIDTH = 800;
$.MAX_HEIGHT = 400;
$.HUD_HEIGHT = 100;
$.UNIVERSE_HEIGHT = 1600;
$.UNIVERSE_WIDTH = 1600;
$.TAG_CAMERA = "CAMERA";
$.TAG_PLAYER = "PLAYER";
$.GROUP_BACKGROUND = "GROUP_BACKGROUND";
$._cachedBrowserPrefix = null;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'random', 'random', 'get$random', function() {
  return $.Random_Random(null);
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, 'loadedImages', 'ImageCache_loadedImages', 'get$ImageCache_loadedImages', function() {
  return $.Map_Map('$.String', $.ImageElement);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Location: function() { return false; },
 is$List: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$Map: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$FileList: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"href?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLAreaElement', {"":"href?"
});

$.$defineNativeClass('ArrayBuffer', {
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"":"buffer?",
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"":"value="
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
}
});

$.$defineNativeClass('HTMLBaseElement', {"":"href?"
});

$.$defineNativeClass('HTMLBaseFontElement', {"":"color?"
});

$.$defineNativeClass('Blob', {
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"value=",
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height=,width=",
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1("2d");
}
});

$.$defineNativeClass('CanvasRenderingContext2D', {"":"fillStyle!,globalAlpha!,lineWidth!,strokeStyle!",
 beginPath$0: function() {
  return this.beginPath();
},
 clip$0: function() {
  return this.clip();
},
 get$clip: function() { return new $.BoundClosure(this, 'clip$0'); },
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
},
 drawImage$5: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh) {
  return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 restore$0: function() {
  return this.restore();
},
 rotate$1: function(angle) {
  return this.rotate(angle);
},
 save$0: function() {
  return this.save();
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 get$scale: function() { return new $.BoundClosure0(this, 'scale$2'); },
 setTransform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.setTransform(m11,m12,m21,m22,dx,dy);
},
 stroke$0: function() {
  return this.stroke();
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('CharacterData', {"":"length?",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length?",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$clip: function() {
  return this.getPropertyValue$1("clip");
},
 get$color: function() {
  return this.getPropertyValue$1("color");
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 set$src: function(value) {
  this.setProperty$3("src", value, "");
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
}
});

$.$defineNativeClass('HTMLDetailsElement', {
 open$2: function(arg0, arg1) {
  return this.open.call$2(arg0, arg1);
}
});

$.$defineNativeClass('Document', {
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.CTC2.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$hidden: function() {
  return false;
},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) {
  return this.get$translate().call$2(arg0, arg1);
},
 get$id: function() {
  return "";
},
 get$parent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedError$("Hidden can't be set for document fragments."));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"hidden=,id?",
 get$$$dom_className: function() { return this.className; },
 set$$$dom_className: function(v) { this.className = v; },
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
    return $._ElementCssClassSet$(this);
  } else {
    return Object.prototype.get$classes.call(this);
  }
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 translate$2: function(arg0, arg1) {
  return this.translate.call$2(arg0, arg1);
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
}
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height=,src!,width="
});

$.$defineNativeClass('ErrorEvent', {"":"message?"
});

$.$defineNativeClass('EventException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('File', {
 is$File: function() { return true; }
});

$.$defineNativeClass('FileException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.num');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.num');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"":"color?"
});

$.$defineNativeClass('HTMLFormElement', {"":"length?"
});

$.$defineNativeClass('HTMLFrameElement', {"":"height?,location?,src!,width?"
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLHRElement', {"":"width="
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequest', {"":"response?,responseType!",
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$2: function(method, url) {
  return this.open(method, url);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestUpload', {
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height=,src!,width="
});

$.$defineNativeClass('HTMLImageElement', {"":"height=,src!,width=,x?,y?",
 complete$1: function(arg0) {
  return this.complete.call$1(arg0);
}
});

$.$defineNativeClass('HTMLInputElement', {"":"height=,pattern?,src!,value=,width=",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('Int16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('KeyboardEvent', {
 get$keyCode: function() {
  return this.keyCode;
}
});

$.$defineNativeClass('HTMLKeygenElement', {
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLLIElement', {"":"value="
});

$.$defineNativeClass('HTMLLinkElement', {"":"href?",
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('Location', {"":"href?",
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('DOMWindow', {"":"navigator?",
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 open$2: function(url, name$) {
  return this.open$3(url, name$, null);
},
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 get$_location: function() {
  return this.location;
},
 requestLayoutFrame$1: function(callback) {
  $._addMeasurementFrameCallback(callback);
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($.convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1) {
    this._postMessage_2$3($.convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
},
 postMessage$2: function(message, targetOrigin) {
  return this.postMessage$3(message, targetOrigin, $);
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height=,loop!,width=",
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('HTMLMediaElement', {"":"currentTime?,duration?,error?,loop!,src!",
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure(this, 'load$0'); }
});

$.$defineNativeClass('MediaKeyEvent', {"":"message?"
});

$.$defineNativeClass('MessageEvent', {
 get$source: function() {
  return $._convertNativeToDart_Window(this.source);
}
});

$.$defineNativeClass('HTMLMeterElement', {"":"value="
});

$.$defineNativeClass('MouseEvent', {"":"x?,y?"
});

$.$defineNativeClass('MutationObserver', {
 observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree: function(target, attributeFilter, attributeOldValue, attributes, characterData, characterDataOldValue, childList, options, subtree) {
  var parsedOptions, t1;
  parsedOptions = {};
  if (!(options == null))
    $.getInterceptor$JSArray(options).forEach$1(options, new $.MutationObserver_observe_anon(parsedOptions));
  t1 = new $.MutationObserver_observe_override(parsedOptions);
  t1.call$2("childList", childList);
  t1.call$2("attributes", attributes);
  t1.call$2("characterData", characterData);
  t1.call$2("subtree", subtree);
  t1.call$2("attributeOldValue", attributeOldValue);
  t1.call$2("characterDataOldValue", characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2("attributeFilter", attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$2$attributes: function(target, attributes) {
  return this.observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree(target, null, null, attributes, null, null, null, null, null);
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent?"
});

$.$defineNativeClass('Node', {
 get$$$dom_attributes: function() { return this.attributes; },
 get$$$dom_localName: function() { return this.localName; },
 get$$$dom_namespaceUri: function() { return this.namespaceURI; },
 get$parent: function() { return this.parentNode; },
 set$text: function(v) { this.textContent = v; },
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    if (!(this.get$parent() == null))
      this.get$parent().$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {
 start$1: function(arg0) {
  return this.start.call$1(arg0);
},
 start$3: function(arg0, arg1, arg2) {
  return this.start.call$3(arg0, arg1, arg2);
}
});

$.$defineNativeClass('HTMLObjectElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLOptGroupElement', {
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLOptionElement', {"":"value=",
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLOutputElement', {"":"value="
});

$.$defineNativeClass('HTMLParamElement', {"":"value="
});

$.$defineNativeClass('PositionError', {"":"message?"
});

$.$defineNativeClass('HTMLPreElement', {"":"width="
});

$.$defineNativeClass('HTMLProgressElement', {"":"value="
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLScriptElement', {"":"src!"
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,value=",
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLSourceElement', {"":"src!"
});

$.$defineNativeClass('SpeechRecognitionError', {"":"message?"
});

$.$defineNativeClass('SQLError', {"":"message?"
});

$.$defineNativeClass('SQLException', {"":"message?"
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key?"
});

$.$defineNativeClass('HTMLStyleElement', {
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLTableCellElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLTableColElement', {"":"width="
});

$.$defineNativeClass('HTMLTableElement', {"":"width="
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"value=",
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('HTMLTrackElement', {"":"src!"
});

$.$defineNativeClass('Uint16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element, null);
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height=,width="
});

$.$defineNativeClass('XPathException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabaseException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGAElement', {"":"href?",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGAltGlyphElement', {"":"href?"
});

$.$defineNativeClass('SVGCircleElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGClipPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGCursorElement', {"":"x?,y?,href?"
});

$.$defineNativeClass('SVGDefsElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGEllipseElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"scale?,height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height?,width?,x?,y?,href?"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFEPointLightElement', {"":"x?,y?"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFESpotLightElement', {"":"x?,y?"
});

$.$defineNativeClass('SVGFETileElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGFilterElement', {"":"height?,width?,x?,y?,href?"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height?,width?,x?,y?",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGGElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGGlyphRefElement', {"":"x=,y=,href?"
});

$.$defineNativeClass('SVGGradientElement', {"":"href?"
});

$.$defineNativeClass('SVGImageElement', {"":"height?,width?,x?,y?,href?",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGLineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGMPathElement', {"":"href?"
});

$.$defineNativeClass('SVGMaskElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGPatternElement', {"":"height?,width?,x?,y?,href?"
});

$.$defineNativeClass('SVGPolygonElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGPolylineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGRectElement', {"":"height?,width?,x?,y?",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGScriptElement', {"":"href?"
});

$.$defineNativeClass('SVGStyleElement', {
 disabled$1: function(arg0) {
  return this.disabled.call$1(arg0);
}
});

$.$defineNativeClass('SVGElement', {
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGException', {"":"message?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height?,width?,x?,y?"
});

$.$defineNativeClass('SVGSwitchElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGTRefElement', {"":"href?"
});

$.$defineNativeClass('SVGTextElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGTextPathElement', {"":"href?"
});

$.$defineNativeClass('SVGTextPositioningElement', {"":"x?,y?",
 rotate$1: function(arg0) {
  return this.rotate.call$1(arg0);
}
});

$.$defineNativeClass('SVGUseElement', {"":"height?,width?,x?,y?,href?",
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('AudioBuffer', {"":"duration?,gain?,length?"
});

$.$defineNativeClass('AudioBufferSourceNode', {"":"buffer=,gain?,loop!,loopEnd!,loopStart!,playbackState?",
 start$3: function(when, grainOffset, grainDuration) {
  var t1, t2;
  t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 start$1: function(when) {
  return this.start$3(when, $, $);
},
 stop$1: function(when) {
  if (!!this.stop)
    this.stop(when);
  else
    this.noteOff(when);
}
});

$.$defineNativeClass('AudioContext', {"":"currentTime?,destination?,listener?",
 get$on: function() {
  return $.AudioContextEvents$(this);
},
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 createPanner$0: function() {
  return this.createPanner();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 createGain$0: function() {
  if (this.createGain !== undefined)
    return this.createGain();
  else
    return this.createGainNode();
}
});

$.$defineNativeClass('AudioNode', {
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
},
 disconnect$1: function(output) {
  return this.disconnect(output);
}
});

$.$defineNativeClass('AudioParam', {"":"maxValue?,value="
});

$.$defineNativeClass('GainNode', {"":"gain?"
});

$.$defineNativeClass('PannerNode', {"":"coneOuterGain!"
});

// 153 dynamic classes.
// 230 classes
// 23 !leaf
(function() {
  var v0_TextPositioningElement = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTextElement|SVGTSpanElement', v1_GradientElement = 'SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement', v2_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v3_SvgElement = [v0_TextPositioningElement, v1_GradientElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncAElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEConvolveMatrixElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEMergeElement|SVGFESpecularLightingElement|SVGFEDistantLightElement|SVGFESpotLightElement|SVGFETileElement|SVGFEOffsetElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceUriElement|SVGGlyphElement|SVGFontElement|SVGForeignObjectElement|SVGFEPointLightElement|SVGFontFaceSrcElement|SVGLineElement|SVGGElement|SVGImageElement|SVGMPathElement|SVGMaskElement|SVGMissingGlyphElement|SVGHKernElement|SVGPathElement|SVGMetadataElement|SVGGlyphRefElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGScriptElement|SVGStyleElement|SVGSymbolElement|SVGSVGElement|SVGSwitchElement|SVGTitleElement|SVGVKernElement|SVGUseElement|SVGViewElement|SVGMarkerElement'].join('|'), v4_Element = [v2_MediaElement, v3_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLegendElement|HTMLLinkElement|HTMLLabelElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v5_CharacterData = 'CharacterData|Text|CDATASection|Comment', v6_DocumentFragment = 'DocumentFragment|ShadowRoot', v7_Document = 'Document|HTMLDocument|SVGDocument', v8_Uint8Array = 'Uint8Array|Uint8ClampedArray', v9_Node = [v4_Element, v5_CharacterData, v6_DocumentFragment, v7_Document, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGTextPositioningElement', v0_TextPositioningElement], ['SVGGradientElement', v1_GradientElement], ['SVGElement', v3_SvgElement], ['HTMLMediaElement', v2_MediaElement], ['AudioNode', 'AudioNode|AudioSourceNode|AudioBufferSourceNode|PannerNode|AudioDestinationNode|GainNode'], ['AudioParam', 'AudioParam|AudioGain'], ['MouseEvent', 'MouseEvent|WheelEvent'], ['Element', v4_Element], ['CharacterData', v5_CharacterData], ['DocumentFragment', v6_DocumentFragment], ['Document', v7_Document], ['Node', v9_Node], ['NodeList', 'NodeList|RadioNodeList'], ['Uint8Array', v8_Uint8Array], ['ArrayBufferView', [v8_Uint8Array, 'ArrayBufferView|Float32Array|DataView|Int32Array|Float64Array|Int16Array|Int8Array|Uint16Array|Uint32Array'].join('|')], ['Blob', 'Blob|File'], ['EventTarget', [v9_Node, 'EventTarget|XMLHttpRequest|DOMWindow|XMLHttpRequestUpload|AudioContext'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastChar = field[len - 1];
  var needsGetter = lastChar == '?' || lastChar == '=';
  var needsSetter = lastChar == '!' || lastChar == '=';
  if (needsGetter || needsSetter) field = field.substring(0, len - 1);
  if (needsGetter) {
    var getterString = "return this." + field + ";";
      prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
Isolate.$isolateProperties.$generateAccessor = generateAccessor
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var s = desc[''].split(';'), supr = s[0];
      var fields = s[1] == '' ? [] : s[1].split(',');
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=game.dart.js.map